[
  {
    "markdown": "Our API supports Idempotency. This allow you to safely retry an operation without performing the action twice. This might be useful when something in the process goes wrong. Lets say you are sending an invoice over the Peppol network. Something goes wrong and the action is not executed. Meaning we did not store the Idempotency token either. This allows you to retry the action. Until the action is successful, since the Idempotency token was not used before. An idempotency token is a unique key created by the Client which the server uses to recognize subsequent retries of the same request. Allowing us to make sure its unique. The key is only stored on the server side when the action is successfully executed. **Usage** If you want to use the Idempotency token in the API you can by simply adding it to the header of the request. | Header field name | Header field value | | --- | --- | | Idempotency-Key | \"Unique value created by the client\" | \n\n# How It Works Skip link to How It Works - **Token Generation:** The client generates a unique idempotency token for each operation. - **Initial Request:** The client includes the idempotency token in the header of the API request. - **Server Recognition:** The server checks if the token has been used before. If not, it processes the request and stores the token. - **Retry Attempts:** If the request fails and the client retries, it uses the same token. Since the server recognizes the token, it ensures that the operation is not performed more than once. - **Token Storage:** The idempotency token is stored on the server side only after a successful operation. If the operation fails and the token is not stored, the client can safely retry without risking duplicate actions.",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/idempotent-tokens",
      "title": "Idempotent Tokens",
      "description": "More tokens? Or are these different"
    }
  },
  {
    "markdown": "# 📝 API Reference Skip link to 📝 API Reference The Billit API is built around the REST Principal. It uses easy to recognize URLs and it accepts JSON bodies as a basis to use the API. The responses you might get are always in the JSON format. The API can be used in Test mode (Sandbox) and Full production. This allows you to fully build and test your use case risks-free. For basic API uses we allow an API Key. For more elaborate use cases or when the integration is built for multiple customers we require the integrator to use the OAuth flow. \n\n# Swagger Skip link to Swagger Our OpenAPI swagger page can be found here Billit Swagger. \n\n# ⭐Just getting started? Skip link to ⭐Just getting started? Check out our QuickStart We hope you have a nice experience using our API. To find out what support you can receive, please navigate to [What support can I get as a developer?](   - [Environments]( - [Authentication]( - [Calculations](",
    "metadata": {
      "sourceURL": "https://docs.billit.be/",
      "title": "Welcome!",
      "description": "Welcome to the Billit API! This page will help you with the Billit API. You'll be up and running in a jiffy!"
    }
  },
  {
    "markdown": "Optimizing accuracy in VAT calculations is a crucial aspect of our API's functionality. Users may occasionally notice minor discrepancies, ranging from 1-10 cents, between the data submitted and the recalculated values provided by our system. This variance arises from our commitment to ensuring the highest level of accuracy in your financial transactions. \n\n# Why Billit Prioritizes Taxable Amount-Based Calculations Skip link to Why Billit Prioritizes Taxable Amount-Based Calculations Billit employs a VAT calculation method that is aligned with European Union standards, focusing on the cumulative taxable amount. This approach is recognized for its precision and is compliant with both EU directives and Belgian regulations. While Belgian businesses have the flexibility to calculate VAT per invoice line or based on the total taxable amount, we have chosen the latter for its distinct advantages: - **Enhanced Accuracy:** By aggregating taxable amounts before applying VAT rates, we minimize rounding errors that can occur when calculating VAT for each line item separately. - **EU Compliance:** This method aligns with EU standards, ensuring that our API is accessible and accurate for both Belgian and non-Belgian customers. - **Simplified Cross-border Transactions:** It facilitates smoother financial operations for companies engaging in cross-border trade within the EU. Since the EU way is more specific and correct we use that one. This also makes it easy for Non Belgian customers to use our API. \n\n# How to Align Your Data with Billit's Calculations Skip link to How to Align Your Data with Billit's Calculations To synchronize your invoicing data with Billit's calculation method, specify whether VAT-inclusive or VAT-exclusive values should govern the calculations at the order line level. This flexibility allows you to determine the primary value for each item, ensuring consistency with the overall invoice calculation. \n\n# Comparison of Calculation Methods Skip link to Comparison of Calculation Methods Billit adopts the taxable amount-based method for VAT calculation, contrasting with the per-order-line calculation method. Below are revised examples to illustrate the differences between these approaches more clearly. Example Invoice Lines Consider the following invoice lines for a clearer comparison: | Order line Title | Net Price | VAT Rate | | --- | --- | --- | | Drinks | €49.99 | 6% | | Computer Mouse | €24.95 | 21% | | Keyboard | €59.99 | 21% | **Order Line-Based Rounding (Less Preferred) ❌** This method calculates VAT for each line separately, potentially leading to rounding differences: - Stationery: €49.99 + (€49.99 * 0.06) = €52.9894 ≈ €52.99 - Computer Mouse: €24.95 + (€24.95 * 0.21) = €30.1895 ≈ €30.19 - Keyboard: €59.99 + (€59.99 * 0.21) = €72.5889 ≈ €72.59 - **Total: €155.77*Taxable Amount-Based Rounding (Billit's Method ✅)** This method aggregates items by VAT rate before calculating and applies rounding at the final step: - Items at 21% VAT: (€24.95 + €59.99) _1.21 = (€84.94)_ 1.21 = €102.7774 ≈ €102.78 - Items at 6% VAT: €49.99 * 1.06 = €52.9894 ≈ €52.99 - **Total: €155.76** \n\n# Conclusion Skip link to Conclusion While both methods yield the same total in this simplified example, the taxable amount-based method ensures greater accuracy and compliance with EU standards. It is particularly advantageous when dealing with fractions of currency, reducing rounding discrepancies and fostering greater consistency across financial documents.",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/calculations",
      "title": "Calculations",
      "description": "We love them!"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. \n\n# API Documentation Skip link to API Documentation \n\n#\n\n# v1/peppol/participants API Call Skip link to v1/peppol/participants API Call \n\n#\n\n## Method: POST Skip link to Method: POST The `v1/peppol/participants` API endpoint is used to register an identifier on the PEPPOL network (SMP). \n\n#\n\n## Request Body Skip link to Request Body To register a participant, you need to provide the tax number in the API call body in the following format: JSON ``` lang-json theme-light { \"CompanyID\": \"BE123456789\" } ``` CompanyID string \n\n# `` 200 Send a direct Peppol message. Compatible with receivers that support Invoice5 or Creditnote5, BisV3 Invoice or BisV3 Creditnote int32    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/peppol_postparticipant-1",
      "title": "/v1/peppol/participants",
      "description": "API Documentation v1/peppol/participants API Call Method: POST The v1/peppol/participants API endpoint is used to register an identifier on the PEPPOL network (SMP). Request Body To register a participant, you need to provide the tax number in the API call body in the following format: { \"CompanyID\"..."
    }
  },
  {
    "markdown": "**We will try and help you on your way in a few simple steps. If you have any questions please ask us at support@billit.be.** \n\n#\n\n# What is OAuth Skip link to What is OAuth OAuth is a way of letting a customer grant you access to their Billit account and allowing you to perform actions in their name. For this you need to have an OAuth client which needs to be requested, how can be found here How do I request OAuth Client ID and Secret? or by adding the identifier to the state parameter as these values will be returned after logging in. The redirect URL provided when requesting an OAuth client is used to send the result to after a login attempt. Thus the place where users are returned to in your website when the authentication was successful or unsuccessful. > \n\n#\n\n# 📘 One client to rule them all! > > Only you as an integrator need a client, your users do not. They will make use of your client to grant you access. \n\n#\n\n# Requesting access Skip link to Requesting access Access to a user's profile and companies is requested via the OAuth login, here users can give their consent and grant you the necessary rigths as an integrator. To do this, redirect them to the Billit login with the example link below and fill in the required parameters. (Required) The client_id and redirect_uri are required parameters, if one or both are missing the request will result in an Invalid OAuth2 request and the default Billit login page respectively. (Optional) The state can be a GUID or any other type of content, the value will also be present in the redirectURI after a successful login attempt as the state query param. This is typically used to prevent cross-site request forgery attacks. Note: the usage of state is required when providing own query params as these are not allowed in the redirect_uri. Multiple parameters will have to be split with any character other than \"&\" as parameters following the \"&\" will not be returned in the state after logging in. HTTP ``` lang-http theme-light {CLIENTID}&redirect_uri={REDIRECTURI}&state={STATE} ``` \n\n#\n\n## The redirect result Skip link to The redirect result The result after a user is redirected back to your site has 2 states, being: 1. The access was given, the user is allowed temporary access and is redirected. The redirectURI will contain a query param -> \"code={authorization_code}\" 2. The access was denied, the user is redirected and the redirectURI will contain a query param -> \"error=access_denied\" If the result is the first option, meaning access has been granted, then you can move on to the next step of requesting the access and refresh tokens. The access token has en expiry time frame allowing you access as long as it's active, when this token expires you will have to refresh it using the refresh token. \n\n#\n\n# Token requisitioning Skip link to Token requisitioning HTTP ``` lang-http theme-light ``` \n\n#\n\n## Required POST parameters Skip link to Required POST parameters | Param name | Definition | | --- | --- | | client_id | You received this from Billit | | client_secret | You received this from Billit | | code | The authorization code | | grant_type | This has to be \"authorization_code\" | | redirect_uri | The URL you provided to Billit when asking for ID and Secret | When sending the data to Billit make sure to set body type to Application/json. \n\n#\n\n## Token requisitioning response Skip link to Token requisitioning response When correctly posting to the Billit API you will have a JSON response coming back. This will look similar to what you see below. JSON ``` lang-json theme-light { \"token_type\": \"Bearer\", \"expires_in\": 3600, \"access_token\": \"{ACCESS_TOKEN}\", \"refresh_token\":\"{REFRESH_TOKEN}\" } ``` These tokens are also known as bearer tokens, allowing you to call the API in name of the person who granted permission via the OAuth connection. Text ``` lang-text theme-light GET HTTP/1.1 Authorization: Bearer {ACCESS_TOKEN} Accept: application/json ``` Access tokens expire, so you might have to refresh them. After the time provided in the returned JSON (\"Expires_In\") the token will not be valid anymore. Luckily this does not mean the user has to re authenticate but the API can refresh the access. \n\n#\n\n# Refresh the access token Skip link to Refresh the access token HTTP ``` lang-http theme-light ``` > \n\n#\n\n# 📘 Use the correct grant_type! > > Make sure to use the grant_type \"refresh_token\" instead of \"authorization_code\" when trying to refresh an expired access token. \n\n#\n\n## Required POST parameters Skip link to Required POST parameters | Param name | Definition | | --- | --- | | client_id | You received this from Billit | | client_secret | You received this from Billit | | grant_type | This has to be \"refresh_token\" | | refresh_token | The refresh token from the initial JSON response | This will return a new token which you can use to execute API calls. The result will have the same content as the initial token request, except with different values. \n\n#\n\n# Error states Skip link to Error states Invalid access tokenAccess token expiredAccess token revoked ``` lang-json theme-light { \"errors\": [ { \"Code\": \"InvalidAccessToken\" } ] } ``` ``` lang-json theme-light { \"errors\": [ { \"Code\": \"AccessTokenExpired\" } ] } ``` ``` lang-json theme-light { \"errors\": [ { \"Code\": \"AccessTokenRevoked\" } ] } ```   - [How do I request Oauth Client ID and Secret?]( - [When am I required to use Oauth?](",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/how-do-i-get-started-with-oauth",
      "title": "How do I get started with OAuth?",
      "description": "Ahn, you are interested in the way of OAuth"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. Please find more information here -> [ Patchable properties for this endpoint are: - Paid, - PaidDate, - IsSent, - ApprovalStatus, - InternalInfo, - AccountCode, - Invoiced, - AccountantVerificationNeeded, ExportedToConnector orderID int32 required Add Field `` 200 Patch an order    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request PATCH 2 --url 3 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/order_patchorders-1",
      "title": "/v1/orders/{orderID}",
      "description": "Please find more information here -&gt; https://docs.billit.be/reference/order-1 Patchable properties for this endpoint are: Paid, PaidDate, IsSent, ApprovalStatus, InternalInfo, AccountCode, Invoiced, AccountantVerificationNeeded, ExportedToConnector"
    }
  },
  {
    "markdown": "Because you sometimes want to query on lists of invoices or retrieve purchase invoice which you do not already have a unique ID for we have our list API endpoint. This endpoint also returns a order object but less properties and it will be contained in a list. We allow Odata queries to be ran ontop of the endpoint giving you more freedom to already provide us some queries which will filter the response. More info about Odata can be found here -> [Odata Info]( | Endpoint | Method | Response | | --- | --- | --- | | /v1/orders | GET | List of Orders | | /v1/orders?$filter=OrderType+eq+'Invoice'+and+OrderDirection+eq+'Income' | GET | With Odata | JSON ``` lang-json theme-light { \"Items\": [ { \"OrderID\": HIDDEN, \"CompanyID\": HIDDEN, \"OrderPDF\": { \"FileID\": \"c1cd2bfa-3678-42dd-99f3-2f6d323bd2fc\" }, \"OrderNumber\": \"QS-001\", \"CounterParty\": { \"PartyID\": HIDDEN, \"Addresses\": , \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"Box\": \"301\", \"City\": \"Ghent\", \"CountryCode\": \"BE\", \"VATNumber\": \"BE0563846944\", \"PartyType\": \"Customer\", \"VATLiable\": true, \"DisplayName\": \"Billit\", \"VATDeductable\": true, \"Identifiers\": [ { \"IdentifierType\": \"GLN\", \"Identifier\": \"5430003732007\" } ] }, \"OrderDate\": \"2024-01-01T00:00:00\", \"ExpiryDate\": \"2024-01-31T00:00:00\", \"OrderType\": \"Invoice\", \"LastModified\": \"2024-03-10T15:00:49.72\", \"Created\": \"2024-03-10T15:00:49.533\", \"OrderDirection\": \"Income\", \"TotalExcl\": 17.50, \"TotalIncl\": 19.68, \"TotalVAT\": 2.18, \"PaymentReference\": \"+++001/1800/63503+++\", \"Paid\": false, \"ExternalProvider\": \"APIFeed\", \"Currency\": \"EUR\", \"IsSent\": false, \"Invoiced\": false, \"RemindersSent\": 0, \"ToPay\": 19.68, \"OrderStatus\": \"ToSend\", \"Overdue\": true, \"DaysOverdue\": 39, \"FXRateToForeign\": 1.00000, \"DeliveryDate\": \"2024-01-01T00:00:00\", \"ExportedToConnector\": false, \"CurrentDocumentDeliveryDetails\": { \"IsDocumentDelivered\": false } } ] } ```",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/retrieve-list-of-invocies",
      "title": "Retrieve list of invocies",
      "description": "Because you sometimes want to query on lists of invoices or retrieve purchase invoice which you do not already have a unique ID for we have our list API endpoint. This endpoint also returns a order object but less properties and it will be contained in a list. We allow Odata queries to be ran ontop ..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. \n\n# `` 200 200 json    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 - Result",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/v1webhooks-1",
      "title": "Get Webhooks"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. ReceiverCompanyID string \n\n# `` 200 Lists the first 10 peppol items in the inbox. Use the file api to download the actual message and the confirm method to remove it from the queue object InboxItems array of objects InboxItems object InboxItemID int32 SenderPeppolID string PeppolDocumentType string ReceiverPeppolID string SenderCompanyID string ReceiverCompanyID string CreationDate date-time PeppolFileID string    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/peppol_getinbox-1",
      "title": "/v1/peppol/inbox"
    }
  },
  {
    "markdown": "Welcome to the Billit API QuickStart Guide! This guide provides you with simple examples to get you up and running with our API. Whether you're using Postman, curl, or any other API testing tool, these examples will help you make your first API calls. \n\n#\n\n# Prerequisites Skip link to Prerequisites before you start, make sure you have: - A Billit sandbox Account. **Any license can be taken, no invoice will be sent!** - The generated API key (found under your profile in the Billit application) - The base URL used for all API calls: \" \" - Installed Postman or a similar tool for making API request **Authentication** For this quick start walkthrough the API key authentication will be used. This to have fast results! \n\n#\n\n# The Scope Skip link to The Scope This walkthrough will guide you through creating your first invoice in the application up to fully syncing e-invoice statuses, Implementing Idempotency and retrieving the original files created by the e-invoice access point for offline storage. \n\n#\n\n# Billit API QuickStart Postman Collection Skip link to Billit API QuickStart Postman Collection The postman collection used for this quickstart session can be found at the link below. A small setup is required to use all examples out of the box. \n\n#\n\n## Postman Setup Skip link to Postman Setup 1. Navigate to the Collection ![Run In Postman]( 2. Insert the API key from the sandbox account. Navigate to variables and fill in API key. !Provide the API key of your **sandbox** account Provide the API key of your **sandbox** account 3. Setup the variables for the account !Fill in the partyID and or contextPartyID with the idea from the company Fill in the partyID and or contextPartyID with the idea from the company 1. Start testing with the quick start collection! ![Run In Postman]( d",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/quick-start",
      "title": "API QuickStart",
      "description": "Faster than light?"
    }
  },
  {
    "markdown": "The Billit API Allows you to use Webhooks. This so your integration can listen automatically to any updates and trigger reactions. Billit usess webhooks to notify your application when an event happens in your account. These are useful to able to catch async events such as an invoice that has been paid, updated or created. \n\n#\n\n# How to use the Billit Webhooks Skip link to How to use the Billit Webhooks The Billit webhooks push HTTPS calls to the registered URL provided. We will send a JSON payload to your integration. This data can be used to execute actions in you backend systems. \n\n#\n\n## Steps to receive a webhook Skip link to Steps to receive a webhook 1. Create the webhook Webhook We sign all webhooks we send out with a signature. This Signature can be decrypted by using the Secret we provided you when creating the webhook. More info can be found here -> [Verify Signature](",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/webhooks",
      "title": "Webhooks",
      "description": "Use incoming webhooks to get real-time updates"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. Name string `` 200 Feed has been registered    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/accountant_postfeeds-1",
      "title": "Register a new feed. All newly exported orders or documents will be available in this new feed."
    }
  },
  {
    "markdown": "_In this article I will explain how to get started with Curl and demonstrate some example API calls with extra information._ \n\n# Getting started Skip link to Getting started Curl is a command-line utility, this means it is recommended that you experiment with API calls on Sandbox, as most likely your local will be blocked due to having an invalid certificate. Curl is installed by default on most Linux and macOS distributions. If your PC has Windows then there are 3 options to start with Curl: 1. Installed by default on Windows 10, version 1803 or later. 2. If you have Git for Windows installed (if you downloaded Git from git-scm.com, the answer is yes), you have `curl.exe` under: Text ``` lang-text theme-light C:Program FilesGitmingw64bin ``` Simply add the above path to `PATH`. 3. Download the Curl package you desire from here, these are the official Windows builds provided by the curl-for-win project. Find `curl.exe` within your downloaded package, it's probably under `bin`. Pick a location on your hard drive that will serve as a permanent home for curl. Place `curl.exe` under that folder. And **NEVER** move the folder or its contents. Next, you'll want to make curl available anywhere from the command line. To do this, add the folder to `PATH`, like this: 1. Start typing \"environment\" in the Windows 10 start menu. 2. Choose **Edit the system environment variables**. 3. Click the **Environment Variables** button at the bottom. 4. Select the \"Path\" variable under \"System variables\" (the lower box). Click the **Edit** button. 5. Click the **Add** button and paste in the folder path where `curl.exe` lives. 6. Click **OK** as needed. Newly opened console windows will have the new `PATH`. \n\n# Options to expand your Curl calls Skip link to Options to expand your Curl calls In curl there are several options you can add to your request to change the requests behaviour. Standard curl syntax looks like this: Bash ``` lang-bash theme-light curl [options] [URL...] ``` The possible options are: - `-X`, `--request` - The HTTP method to be used. - `-i`, `--include` - Include the response headers. - `-d`, `--data` - The data to be sent. - `-H`, `--header` - Additional header to be sent. - `-v`, - This will make the commands provide helpful information such as the resolved IP address, the port and the headers. - `-o`, `name.extension` - By default curl outputs the response to standard output, we can provide an output option to change this. \n\n# Example API Calls Skip link to Example API Calls 1. GET Order Bash ``` lang-bash theme-light curl -X GET {OrderId} --header \"Content-Type:application/json\" --header \"apikey:{MyApiKey}\" --header \"partyID:{MyPartyID}\" --header \"Accept: application/json\" ``` 2. GET List of Orders with Filter Bash ``` lang-bash theme-light curl -X GET --url \"\" --header \"Content-Type:application/json\" --header \"apikey:{MyApiKey}\" --header \"partyID:{MyPartyID}\" --header \"Accept: application/json\" ``` Additionally you could make this more readable by making the OData plain text, both will work. Make note that it is possible you will have to escape the dollarsign \"$\" for Linux and similar environments to prevent incorrect encoding. Bash ``` lang-bash theme-light curl -G --data-urlencode \"$filter=OrderNumber eq '2022/TEST06'\" --header \"Content-Type:application/json\" --header \"apikey:{MyApiKey}\" --header \"partyID:{MyPartyID}\" --header \"Accept: application/json\" ``` 3. POST Order Bash ``` lang-bash theme-light curl -d \"{\"OrderType\":\"Invoice\",\"OrderDirection\":\"Income\",\"OrderDate\":\"2022-08-17\",\"ExpiryDate\":\"2022-09-24\",\"OrderLines\": [{\"Quantity\":1,\"Description\":\"Test Item 1\",\"VATPercentage\":0.00,\"UnitPriceExcl\":6.0000},{\"Quantity\":1,\"Description\":\"Test Item 1\",\"VATPercentage\":0.00,\"UnitPriceExcl\":3.5000}],\"Customer\":{\"Name\":\"Billit3\",\"VATNumber\":\"BE0000089971\",\"PartyType\":\"Customer\"}}\" -H \"Content-Type: application/json\" --header \"apikey:{MyApiKey}\" --header \"partyID:{MyPartyID}\" --header \"Accept: application/json\" ```",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/curl",
      "title": "How do i get started with Curl?",
      "description": "In this article I will explain how to get started with Curl and demonstrate some example API calls with extra information. Getting started Curl is a command-line utility, this means it is recommended that you experiment with API calls on Sandbox, as most likely your local will be blocked due to havi..."
    }
  },
  {
    "markdown": "Creating the first invoice is that illuminating moment when you think, _\"Aha! This is how it works!\"_ Understanding the significance of this experience, we've streamlined the process to make it as straightforward as possible. No need for multiple calls to create the invoice or additional development to accommodate various e-invoice networks. Everything is consolidated into one simple endpoint. As you will see in the example there is no need to first create the customer and then the invoice. We will try and find an existing customer based on VAT, Email, Address, CustomerNr if enabled. if not we will auto create a new one for you saving the hassle for the extra API Call. Link to Postman collection -> (Create First Invoice) When the Postman or the information below is successfully implemented you can start creating invoices as much as you want. No limits! Running Bulk invoice runs or continuous runs this is how you handle it! \n\n# Detailed information Skip link to Detailed information Below you can find the Endpoint used and the JSON for creating a basic invoice. By executing this request you will receive a _**Unique ID**_. This ID indicates **success** together with the **200 response code**, we advice storing the Unique ID onto your own invoice Object or references to this invoice. As you will see no calculations will have to be done by you. We will always calculate the data provided by you. More information on calculations can be found here > \n\n#\n\n# 📘 Testable request in Postman: 01 - Create Sales Invoice | Endpoint | Method | Response | | --- | --- | --- | | /v1/orders | Post | INT (Unique OrderID) | json ``` lang-json theme-light { \"OrderType\": \"Invoice\", \"OrderDirection\": \"Income\", \"OrderNumber\": \"QS-001\", \"OrderDate\": \"2024-01-01\", \"ExpiryDate\": \"2024-01-31\", \"Customer\": { \"Name\": \"Billit\", \"VATNumber\": \"BE0563846944\", \"PartyType\": \"Customer\", \"Identifiers\": [ { \"IdentifierType\": \"GLN\", \"Identifier\": \"5430003732007\" } ], \"Addresses\": [ { \"AddressType\": \"InvoiceAddress\", \"Name\": \"Billit\", \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"City\": \"Ghent\", \"Box\": \"301\", \"CountryCode\": \"BE\" }, { \"AddressType\": \"DeliveryAddress\", //The delivery address, if not provided will be automatically the same as invoice address \"Name\": \"Billit\", \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"City\": \"Ghent\", \"Box\": \"301\", \"CountryCode\": \"BE\" } ] }, \"OrderLines\": [ { \"Quantity\": 1, \"UnitPriceExcl\": 10.0, \"Description\": \"Box of cookies\", \"VATPercentage\": 6 }, { \"Quantity\": 2, \"UnitPriceExcl\": 3.75, \"Description\": \"Sticks\", \"VATPercentage\": 21 } ] } ``` \n\n#\n\n# Validations Skip link to Validations > \n\n#\n\n# 📘 Testable request in Postman: 02 - Validation Example We will validate your data before processing it into Billit. Therefor you could potentially run into one of these while building. A response can look like the following for example when using a wrong VAT percentage for the country you are invoicing from. JSON ``` lang-json theme-light { \"errors\": [ { \"Code\": \"InvalidVAtPercentageForTaxCountry_0_\", \"Description\": \"Invalid VAT percentage for country code BE\" } ] } ```",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/create-first-invoice",
      "title": "Creating your first invoice",
      "description": "AhnHa this easy?"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. feedName string required \n\n# `` 200 Get a list of all files to download. array of objects object FeedItemID int32 The ID of the feeditem itself. Use this ID to confirm that the feed was succesfully processed EntityID int32 The ID of the order or the ID of the document. Use this ID in the Order or Document API to fetch the data EntityType string Order or Document PartyID int32 The ID of the company that uploaded the document. Use this ID in the contextPartyID header when downloading the order or document \n\n# `` 400 The request did not validate. Check response body for more details array of objects object FeedItemID int32 The ID of the feeditem itself. Use this ID to confirm that the feed was succesfully processed EntityID int32 The ID of the order or the ID of the document. Use this ID in the Order or Document API to fetch the data EntityType string Order or Document PartyID int32 The ID of the company that uploaded the document. Use this ID in the contextPartyID header when downloading the order or document \n\n# `` 500 There was a problem. We have been notified already but dont hesitate to contact support. array of objects object FeedItemID int32 The ID of the feeditem itself. Use this ID to confirm that the feed was succesfully processed EntityID int32 The ID of the order or the ID of the document. Use this ID in the Order or Document API to fetch the data EntityType string Order or Document PartyID int32 The ID of the company that uploaded the document. Use this ID in the contextPartyID header when downloading the order or document    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200`` 400`` 500 text/json `` 200`` 400`` 500",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/accountant_getindex-1",
      "title": "Get A list of all feeds to download. Only query this once per minute"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. DocumentID int32 CompanyID int32 File object File object Name string Description string DocumentDate date-time CreationDate date-time Tags array of strings Tags ADD string \n\n# `` 200 Save a document int32    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/document_postdocument-1",
      "title": "/v1/documents"
    }
  },
  {
    "markdown": "When an invoice has been created a unique ID is returned. With this ID you can use retrieve all information stored in Billit for this specific invoice. You will be able to retrieve the PDF, E-invoice delivery details, full tax calculations, Original sent E-invoice XML.... Good news! The response you will receive is the same object as you used to create the invoice. Meaning no additional objects need to be created! > \n\n#\n\n# 📘 Testable request in Postman: 03 - Retrieve invoice data | Endpoint | Method | Response | | --- | --- | --- | | /v1/orders/{UniqueID} | GET | Order Object | To test the testable request in Postman you will have to provide the request with the Unique ID returned when creating the invoice. Because of the response containing allot of information you will have a brief summary below of the most important fields. | Property | Value Type | Info | | --- | --- | --- | | OrderID | UniqueID | Same ID as in request | | CompanyID | UniqueID | Company Ownder ID of the invoice | | OrderPDF | Object | Contains the PDF generated or provided for the invoice | | Attachments | List | Contains the Attachments for the invoice and will always contain the original JSON used to created the invoivce through API. | | OrderNumber | ID | The Unique invoice ID provided or generated | | Customer | Object | Contains metadata for the invoice customer | | Supplier | Object | Contains metadata for the Supplier (Sales invoices== self) | | LastModified | DateTime | Last datetime when the invoice was modified | | Created | Datetime | The date when the api processed the invoice | | Orderlines | List | Contains the Invoice items in a list with tax calculated on them | | VatGroups | List | Contains the different vatgroups calculated for the Invoice | | Paid | Bool | If the invoice was paid or a payments was received in Billit this will be set to true | | IsSent | Bool | If the invoice was sent Manually, API, or job it will be set to true | | PaymentLinks | Object | Contains the EPC QR code for payments | | CurrentDocumentDeliveryDetails | Object | Contains the information of the delivery of the document | | Messages | List | Contains all messages for incoming and outgoing traffic for the invoice | Example output below JSON ``` lang-json theme-light { \"OrderID\": HIDDEN, \"CompanyID\": HIDDEN, \"OrderPDF\": { \"FileID\": \"c1cd2bfa-XXXX-XXXX-XXXX-2f6d323bd2fc\", \"FileName\": \"Invoice_QS-001_Billit.pdf\" }, \"Attachments\": [ { \"FileID\": \"af3b583e-XXXX-XXXX-XXXX-2a7d8680a324\", \"FileName\": \"QS-001__10_03_2024 15_00_49.json\" } ], \"OrderNumber\": \"QS-001\", \"Customer\": { \"PartyID\": HIDDEN, \"Name\": \"Billit\", \"Addresses\": [ { \"AddressType\": \"InvoiceAddress\", \"Name\": \"Billit\", \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"Box\": \"301\", \"City\": \"Ghent\", \"CountryCode\": \"BE\" }, { \"AddressType\": \"DeliveryAddress\", \"Name\": \"Billit\", \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"Box\": \"301\", \"City\": \"Ghent\", \"CountryCode\": \"BE\" } ], \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"Box\": \"301\", \"City\": \"Ghent\", \"CountryCode\": \"BE\", \"Contact\": \"\", \"ContactLastName\": \"\", \"VATNumber\": \"BE0563846944\", \"LastModified\": \"2024-03-10T15:00:49.487\", \"Created\": \"2024-03-10T13:55:42.723\", \"PartyType\": \"Customer\", \"VATLiable\": true, \"Language\": \"EN\", \"VentilationCode\": \"4\", \"CustomFields\": , \"BankAccounts\": , \"DefaultPaid\": false, \"DisplayName\": \"Billit\", \"DefaultExpiryOffset\": 30, \"GLDefaultExpiryOffset\": 30, \"VATDeductable\": true, \"DefaultReductionPercentage\": 0.00, \"Identifiers\": [ { \"IdentifierType\": \"GLN\", \"Identifier\": \"5430003732007\", \"SchemeID\": \"0088\" } ], \"SmallEnterprise\": false, \"DefaultCurrencyTC\": \"EUR\" }, \"Supplier\": { \"PartyID\": HIDDEN, \"Name\": \"Billit Quickstart\", \"Addresses\": [ { \"AddressType\": \"InvoiceAddress\", \"Name\": \"BILLIT\", \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"Box\": \"302\", \"Zipcode\": \"9000\", \"City\": \"Gent\", \"CountryCode\": \"BE\" }, { \"AddressType\": \"DeliveryAddress\", \"Name\": \"BILLIT\", \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"Box\": \"302\", \"Zipcode\": \"9000\", \"City\": \"Gent\", \"CountryCode\": \"BE\" } ], \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"Box\": \"302\", \"Zipcode\": \"9000\", \"City\": \"Gent\", \"CountryCode\": \"BE\", \"IBAN\": \"HIDDEN\", \"BIC\": \"GKCCBEBB\", \"Phone\": \"HIDDEN\", \"Email\": \"thibau@billit.be\", \"Contact\": \"Thibau Verberckmoes\", \"ContactFirstName\": \"Thibau\", \"ContactLastName\": \"Verberckmoes\", \"VATNumber\": \"BE0563846944\", \"LastModified\": \"2024-03-10T15:00:39.91\", \"Created\": \"2024-03-10T13:16:02.34\", \"PartyType\": \"Supplier\", \"VATLiable\": true, \"Language\": \"EN\", \"VentilationCode\": \"4\", \"CustomFields\": , \"BankAccounts\": [ { \"IBAN\": \"HIDDEN\", \"BIC\": \"GKCCBEBB\", \"Currency\": \"EUR\", \"Verified\": false, \"Saldo\": 0.00 } ], \"DefaultPaid\": false, \"DisplayName\": \"Billit Quickstart\", \"FinancialReductionPercentageDefault\": 2.00, \"FinancialReductionDaysDefault\": 8, \"DefaultExpiryOffset\": 30, \"GLDefaultExpiryOffset\": 30, \"VATDeductable\": true, \"DefaultReductionPercentage\": 0.00, \"Identifiers\": , \"SmallEnterprise\": false, \"DefaultCurrencyTC\": \"EUR\" }, \"CounterParty\": { \"PartyID\": HIDDEN, \"Name\": \"Billit\", \"Addresses\": [ { \"AddressType\": \"InvoiceAddress\", \"Name\": \"Billit\", \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"Box\": \"301\", \"City\": \"Ghent\", \"CountryCode\": \"BE\" }, { \"AddressType\": \"DeliveryAddress\", \"Name\": \"Billit\", \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"Box\": \"301\", \"City\": \"Ghent\", \"CountryCode\": \"BE\" } ], \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"Box\": \"301\", \"City\": \"Ghent\", \"CountryCode\": \"BE\", \"Contact\": \"\", \"ContactLastName\": \"\", \"VATNumber\": \"HIDDEN\", \"LastModified\": \"2024-03-10T15:00:49.487\", \"Created\": \"2024-03-10T13:55:42.723\", \"VATLiable\": true, \"Language\": \"EN\", \"VentilationCode\": \"4\", \"CustomFields\": , \"BankAccounts\": , \"DefaultPaid\": false, \"DisplayName\": \"Billit\", \"DefaultExpiryOffset\": 30, \"GLDefaultExpiryOffset\": 30, \"VATDeductable\": true, \"DefaultReductionPercentage\": 0.00, \"Identifiers\": [ { \"IdentifierType\": \"GLN\", \"Identifier\": \"5430003732007\", \"SchemeID\": \"0088\" } ], \"SmallEnterprise\": false, \"DefaultCurrencyTC\": \"EUR\" }, \"OrderDate\": \"2024-01-01T00:00:00\", \"ExpiryDate\": \"2024-01-31T00:00:00\", \"OrderType\": \"Invoice\", \"LastModified\": \"2024-03-10T15:00:49.72\", \"Created\": \"2024-03-10T15:00:49.533\", \"OrderDirection\": \"Income\", \"OrderLines\": [ { \"Quantity\": 1.00000, \"UnitPriceExcl\": 10.00000, \"Description\": \"Box of cookies\", \"TotalExcl\": 10.00, \"TotalVAT\": 0.60, \"VATPercentage\": 6.00, \"VentilationCode\": \"2\", \"CustomFields\": {}, \"InclLeading\": false, \"TotalIncl\": 10.60 }, { \"Quantity\": 2.00000, \"UnitPriceExcl\": 3.75000, \"Description\": \"Sticks\", \"TotalExcl\": 7.50, \"TotalVAT\": 1.58, \"VATPercentage\": 21.00, \"VentilationCode\": \"4\", \"CustomFields\": {}, \"InclLeading\": false, \"TotalIncl\": 9.08 } ], \"PaymentDiscountPercentage\": 0.00, \"PaymentDiscountAmount\": 0.00, \"VatGroups\": [ { \"VentilationCode\": \"2\", \"VATPercentage\": 6.00, \"TotalExcl\": 10.00, \"TotalVAT\": 0.60, \"TotalIncl\": 10.60, \"Mtvh\": 10.00, \"FinancialReductionAmount\": 0.00 }, { \"VentilationCode\": \"4\", \"VATPercentage\": 21.00, \"TotalExcl\": 7.50, \"TotalVAT\": 1.58, \"TotalIncl\": 9.08, \"Mtvh\": 7.50, \"FinancialReductionAmount\": 0.00 } ], \"VentilationCode\": \"4\", \"TotalExcl\": 17.50, \"TotalIncl\": 19.68, \"TotalVAT\": 2.18, \"Tags\": , \"PaymentReference\": \"+++001/1800/63503+++\", \"Paid\": false, \"ExternalProvider\": \"APIFeed\", \"ExternalProviderReferences\": , \"Currency\": \"EUR\", \"IsSent\": false, \"Invoiced\": false, \"CustomFields\": {}, \"RemindersSent\": 0, \"ToPay\": 19.68, \"OrderStatus\": \"ToSend\", \"Overdue\": true, \"DaysOverdue\": 39, \"FXRateToForeign\": 1.00000, \"DeliveryDate\": \"2024-01-01T00:00:00\", \"PaymentLinks\": [ { \"ClickUrl\": \"\", \"QRImageUrl\": \"HIDDEN\" } ], \"AccountantVerificationNeeded\": false, \"CurrentDocumentDeliveryDetails\": { \"IsDocumentDelivered\": false }, \"Messages\":  } ```",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/retrieve-invoice-information",
      "title": "Retrieve invoice information",
      "description": "When an invoice has been created a unique ID is returned. With this ID you can use retrieve all information stored in Billit for this specific invoice. You will be able to retrieve the PDF, E-invoice delivery details, full tax calculations, Original sent E-invoice XML.... Good news! The response you..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. ADD object \n\n# `` 200 Import a list of journals int32    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/journal_postglaccount-1",
      "title": "/v1/journals/commands/import"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. RefusalReason string Defaults to OTH \n\n# `` 200 200 object \n\n# `` 400 400 object    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: application/json' 5 --data ' 6{ 7 \"RefusalReason\": \"OTH\" 8} 9' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 - Result`` 400 - Result",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/v1peppolinboxinboxitemidrefuse",
      "title": "v1/peppol/inbox/{inboxItemID}/refuse"
    }
  },
  {
    "markdown": "# The Peppol Endpoints Skip link to The Peppol Endpoints These endpoints are connected to our Accesspoint, meaning you will not have to access Billit to use this endpoint.    No",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/peppol-1",
      "title": "Peppol",
      "description": "The Peppol Endpoints These endpoints are connected to our Accesspoint, meaning you will not have to access Billit to use this endpoint."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. productID int32 required \n\n# `` 200 Get a product object ProductID int32 Reference string Description string AmountExcl double VAT double Unit string GroupID int32 GroupName string AmountIncl double StockQuantity double MinimumBilledQuantity double BuyExcl double InternalInformation string Created date-time LastModified date-time    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/product_getproduct-1",
      "title": "Get a specific product"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. > \n\n#\n\n# 📘 OData > > This endpoints support OData queries. For more information about this topic, check out the OData documentation on OData - getting started/ OData - Reference or have a look at some examples at [Billit API - OData]( \n\n# `` 200 Get a list of products array of objects object ProductID int32 Reference string Description string AmountExcl double VAT double Unit string GroupID int32 GroupName string AmountIncl double StockQuantity double MinimumBilledQuantity double BuyExcl double InternalInformation string Created date-time LastModified date-time    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/product_getproducts-1",
      "title": "Get a list of products",
      "description": "📘 OData: This endpoints support OData queries. For more information about this topic, check out the OData documentation on OData - getting started / OData - Reference or have a look at some examples at Billit API - OData ."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. Company object Company object AccountSettings object AccountSettings object \n\n# `` 200 OK object View Additional Properties    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/account_registercompany-1",
      "title": "/v1/account/registercompany"
    }
  },
  {
    "markdown": "When receiving a 400 Error from Billit you should also have received a Business type exception with the message explaining the issue. The response will be a list of errors. Each error is a readable object as shown below. JSON ``` lang-json theme-light { \"errors\": [ { \"Code\": \"Invalid Filename\", \"Description\": \"Please change the file name to the correct format\" } ] } ```",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/400",
      "title": "400",
      "description": "When receiving a 400 Error from Billit you should also have received a Business type exception with the message explaining the issue. The response will be a list of errors. Each error is a readable object as shown below. { \"errors\": [ { \"Code\": \"Invalid Filename\", \"Description\": \"Please change the f..."
    }
  },
  {
    "markdown": "Getting started with the Billit API is pretty straight forward. We will explain that in the next few steps. 1. Create an account on the test environment. This is Free and allows for fully isolated testing. This can be done via the following link => Register Sandbox 2. When the account is created you may follow the onboarding process, this helps in filling out basic data for certain API calls. 3. Select a license. You might see that you are on a 15 day trail. if this trail ends you can just select any license and this will **Not** be billed. You may do this in advance of the trail ending. Now you are ready to go and explore the Billit API!   - [Where to find my Api Key?]( - [Approved process](",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/how-to-get-started",
      "title": "How do I get started with the API?",
      "description": "You are in for a treat!"
    }
  },
  {
    "markdown": "# To Billit Skip link to To Billit Below you can find all accepted header values that have a usage with the API | Header Name | Header Value | Header Usage | | --- | --- | --- | | PartyID | INT - A party ID | To define the context | | ContextPartyID | INT - A party ID | To define the context | | ApiKey | \"Secret ID' | To be authenticated with the API | | Authorization | \"Access token\" | To be authenticated with the API | | Idempotent-Key | \"Unique client generated string\" | To make unique requests | | StrictTransportType | \"true\" | To make transportTypes strict | \n\n# From Billit Skip link to From Billit | Header Name | Header Value | Header Usage | | --- | --- | --- | | Billit-Signature | String (Time +Encrypted) | To verify the webhook |",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/header-values",
      "title": "Header values",
      "description": "Head on!"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. CompanyID string \n\n# `` 200 Send a direct Peppol message. Compatible with receivers that support Invoice5 or Creditnote5, BisV3 Invoice or BisV3 Creditnote int32    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request DELETE 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/peppol_deleteparticipant-1",
      "title": "/v1/peppol/participants"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. Please find more information here -> [ orderID int32 required ADD object `` 200 Save booking lines collection    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request PUT 2 --url 3 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/order_putorderbookings-1",
      "title": "/v1/orders/{orderID}/bookingEntries",
      "description": "Please find more information here -&gt; https://docs.billit.be/reference/order-1"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. > \n\n#\n\n# 📘 OData > > This endpoints support OData queries. For more information about this topic, check out the OData documentation on OData - getting started/ OData - Reference or have a look at some examples at [Billit API - OData]( fullTextSearch string \n\n# `` 200 Get a list of documents array of objects object DocumentID int32 CompanyID int32 File object File object Name string Description string DocumentDate date-time CreationDate date-time Tags array of strings Tags    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/document_getdocuments-1",
      "title": "/v1/documents",
      "description": "📘 OData: This endpoints support OData queries. For more information about this topic, check out the OData documentation on OData - getting started / OData - Reference or have a look at some examples at Billit API - OData ."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. This will execute the provided reportID for the given context (user and company). As some reports can be quite heavy in the data they retrieve it can be expected that some requests can take more than 5 seconds to complete. \n\n# `` 200 200 json    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/v1reportsreportid",
      "title": "/v1/reports/{reportID}",
      "description": "This will execute the provided reportID for the given context (user and company). As some reports can be quite heavy in the data they retrieve it can be expected that some requests can take more than 5 seconds to complete."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. ADD object \n\n# `` 200 Save an general ledger account code int32    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/glaccount_postglaccount_import",
      "title": "/v1/glaccounts/commands/import"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. This endpoint will return a list of all available reports for your user (and company if the header is present). To retrieve the report list your user will need to have access to the report rights in the given company. \n\n# `` 200 200 json    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/v1reports",
      "title": "/v1/reports",
      "description": "This endpoint will return a list of all available reports for your user (and company if the header is present). To retrieve the report list your user will need to have access to the report rights in the given company."
    }
  },
  {
    "markdown": "When running a company invoice statuses are important. The power this information can grant you knowing some invoices are delivered, refused or still in progress are big. We learnt that in our API integrators from Small to big enterprises want to know this information on an almost instant possibility. For the instant e-invoice statuses we have our Webhook option. This will send you an update when the invoice has received an update. Allowing you to instantly process the update in your platform or backend. If you rather want to use polling to check for statuses this is also a possibility. For this you can use information explained in an earlier topic for retrieving invoice data. \n\n# Webhook Setup Skip link to Webhook Setup > \n\n#\n\n# 📘 Testable request in Postman: 01 - Create Webhook The webhook process can be setup in 4 Steps. Following the guide [behind this link]( will set you up perfectly An important step for webhooks are verifications that the webhook is valid and not someone pushing data to your backend. The webhooks can be validated through -> [Validate webhooks]( > \n\n#\n\n# 🚧 Restrictions > > - Max 20 Active Webhooks > - Wrongly used Webhooks will lead into removal of the webhook",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/retrieving-your-first-e-invoice-statuses",
      "title": "Retrieving your first e-invoice statuses",
      "description": "When running a company invoice statuses are important. The power this information can grant you knowing some invoices are delivered, refused or still in progress are big. We learnt that in our API integrators from Small to big enterprises want to know this information on an almost instant possibilit..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. Split boolean truefalse File object File object FileSource object FileSource object MetaData object MetaData object \n\n# `` 200 Save a new document to process. Rerturns an upload ID int32    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/toprocess_posttoprocess-1",
      "title": "/v1/toProcess"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. documentID int32 required \n\n# `` 200 Get a document object DocumentID int32 CompanyID int32 File object FileID string FileName string MimeType string FileContent string Name string Description string DocumentDate date-time CreationDate date-time Tags array of strings Tags    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/document_getdocument-1",
      "title": "/v1/documents/{documentID}"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. feedName string required feedItemID int32 required RemoteServerName string RemotePath string \n\n# `` 200 OK object View Additional Properties    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/accountant_postconfirm-1",
      "title": "Confirm each succesfully downloaded feed item to remove it from the feedlist"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. client_id string client_secret string code string grant_type string redirect_uri string refresh_token string state string \n\n# `` 200 OK object View Additional Properties    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/oauth2_posttoken-1",
      "title": "/OAuth2/token"
    }
  },
  {
    "markdown": "#\n\n# Webhook Signatures Skip link to Webhook Signatures We sign all webhooks we send out with a signature. This Signature can be decrypted by using the Secret we provided you when creating the webhook. \n\n#\n\n## Verifying signatures Skip link to Verifying signatures The Billit-Signature header included in each webhook event contains a timestamp and a signature. The timestamp is prefixed by t= and the signature by s=. Text ``` lang-text theme-light t=1657133145,s=479f86b8baa181b97281b767b8db125cc312d18b3e611d6157571abcd539f09f ``` \n\n#\n\n## 1. Extract the timestamp and signature from the signature header Skip link to 1. Extract the timestamp and signature from the signature header Get the timestamp and signature value by splitting the string by \",\". Next you can split by \"=\" to get the value of the parameter. \n\n#\n\n## 2. Build the signature payload string Skip link to 2. Build the signature payload string The signature payload is created by concatenating: - The timestamp - The character \".\" - The received payload as a JSON string For example: Text ``` lang-text theme-light 1657133145.{\"OrderID\":12345,\"EntityType\":\"Order\", ...} ``` \n\n#\n\n## 3. Compare the hash Skip link to 3. Compare the hash SHA-256 hash the signature payload with the signing secret key as key. Verify the generated hash with the signature extracted from the signature header. Optionally, you can check if the difference between the current timestamp and the extracted timestamp is within your tolerance.",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/verify-signature",
      "title": "Verify Signature",
      "description": "Make sure it is verified!"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. VATorCBE string required \n\n# `` 200 Get Peppol participant information. API key is not required. object Registered boolean Identifier string DocumentTypes array of strings DocumentTypes ServiceDetails array of objects ServiceDetails object DocumentIdentifier string DocumentIdentifierScheme string Processes array of objects Processes object ProcessIdentifier string ProcessIdentifierScheme string Endpoints array of objects Endpoints object EndpointURL string TransportProfile string    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/peppol_getparticipantinformation-1",
      "title": "/v1/peppol/participantInformation/{VATorCBE}"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. TypeCodeType string required key string required \n\n# `` 200 Get a translation of a key of a typecode object Items array of objects Items object Key string Value string    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/misc_gettranslation-1",
      "title": "/v1/misc/typecodes/{TypeCodeType}/{key}"
    }
  },
  {
    "markdown": "# 🔒 Authentication (OAuth or API key?) Skip link to 🔒 Authentication (OAuth or API key?) > \n\n#\n\n# 🚧 Secret Keys > > Billit places paramount importance on the security of your authentication keys. **Under no circumstances will Billit request your secret keys**. > > Sharing these keys poses a significant security risk. If you suspect that your keys have been compromised, please reach out to Billit immediately so we can take the necessary steps to secure your account. \n\n# Authentication Methods: API Key vs. OAuth Skip link to Authentication Methods: API Key vs. OAuth Upon creating a Billit account, you gain immediate access to API authentication through an API Key, easily located in the Billit Application under your profile. This key is unique to your account and is not limited to a single company within Billit, allowing for versatile use across multiple entities associated with your account. **API Key Authentication** - **Getting Started:** Your API Key is found under 'Profile' -> 'Users & API Key'. It's crucial to keep this key confidential and store it securely. - **Usage instructions:** - For general API calls, include your API Key in the request header. - To specify the company for the API call, include the Company/PartyID in the request. This detail is essential when your account is linked to multiple companies. - For accountants managing multiple companies, include both the ContextCompanyID (accountant's ID) and the PartyID (company's ID) in the request headers. **OAuth Authentication** Billit advocates for the use of OAuth for enhanced security and scalability, particularly for integrations intended for multiple users. While OAuth is not obligatory for individual use, it becomes a requirement for live integrations serving numerous users. - **Getting Started with Oauth:** - To initiate OAuth authentication, contact Billit support at support@billit.be requesting OAuth credentials. You'll need to provide a Redirect URL and the name of your integration. - Upon review, Billit support will furnish the OAuth Client ID and Secret for sandbox testing. To obtain credentials for the production environment, your application must first be approved for production use. \n\n# Summary of header fields for API Calls Skip link to Summary of header fields for API Calls | Requried | Header field name | Example Value | | --- | --- | --- | | Yes | apiKey | \"YourAPIKey\" | | As Needed | partyID | Company ID | | For accountants cases | ContextPartyID | Accountant's Company ID | By adhering to these guidelines, developers can ensure secure and efficient access to Billit's API, leveraging the appropriate authentication method to suit their application's needs.",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/authentication",
      "title": "Authentication",
      "description": "The way of being super sneaky and secure"
    }
  },
  {
    "markdown": "**The API Key!** The API key allows users to interact with their account. Meaning that the Key is linked to a company or multiple companies. You can find this key under the Profile tab. (Profile -> User & API -> API Key) ! > \n\n#\n\n# 🚧 Never Share! > > Please store this key securely and never send this to anyone. Billit support will **never** ask for this key!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/where-to-find-my-api-key",
      "title": "Where to find my API Key?",
      "description": "The top secret key!"
    }
  },
  {
    "markdown": "Sometimes, you may want to include an additional note or comment for the recipient of the invoice. PEPPOL and other networks support sharing comments at the invoice level. With the Billit API, you can achieve this by using the `Order.Description` property.",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/how-can-i-send-commentsnotes-in-an-e-invoice",
      "title": "How can I send Comments/Notes in an e-invoice",
      "description": "Sometimes, you may want to include an additional note or comment for the recipient of the invoice. PEPPOL and other networks support sharing comments at the invoice level. With the Billit API, you can achieve this by using the Order.Description property."
    }
  },
  {
    "markdown": "# Party Types Skip link to Party Types Party types are mostly used when using the Party Endpoint or when creating an invoice using the Party object instead of a Party ID. | Type | Definition | | --- | --- | | Customer | Used for outgoing invoices | | Supplier | Used for incoming invoices | \n\n#\n\n# Address Types Skip link to Address Types | Type | Definition | | --- | --- | | DeliveryAddress | Used to set a delivery address on a invoice | | InvoiceAddress | Used to set a invoicing address on a invoice | \n\n#\n\n# Order Types Skip link to Order Types | Type | Definition | | --- | --- | | Invoice | A standard invoice | | CreditNote | A standard creditnote which can be linked to an invoice | | Offer | An offer where an invoice can be created from | | DeliveryNote | Delivery notice | | OrderForm | Order notice, proof of order | \n\n#\n\n# Order Direction Skip link to Order Direction | Type | Definition | | --- | --- | | Income | These invoices are for your incoming cashflow | | Cost | These invoices are for your outgoing cashflow | \n\n#\n\n# Order status Skip link to Order status | Status constants | | --- | | Draft | | ToSend | | ToPay | | ToInvoice | | ToDeliver | | ToDomiciliate | | Sent | | Invoiced | | DeliveryNoteCreated | | OrderFormCreated | | Credited | | Refused | | Canceled | | Paid | | ApprovalNeeded | | Delivered | | PaymentFileGenerated | \n\n#\n\n# Order Approval states Skip link to Order Approval states | Status constants | | --- | | Pending | | Approved | | Rejected | | ToApproveByMe | \n\n#\n\n# Transport Types Skip link to Transport Types | Type | Definition | | --- | --- | | SMTP | To send an invoice over SMTP/Email | | Letter | To send a physical letter of the invoice | | Peppol | To send an invoice over the Peppol Network | | SDI | To send an invoice over the SDI network to Italy | | KSeF | To send an invoice over the Polish network | | OSA | To Send a notification report to Hungarian government | | ANAF | To Send an Invoice to Hungarian government | \n\n#\n\n# Order Payment Types Skip link to Order Payment Types | Type | | --- | | Other | | Visa | | Bancontact | | Contant | | Wired | | Online | | Domiciliation | | PrivateAccount | \n\n#\n\n# Webhook Entity Types Skip link to Webhook Entity Types | Type | Definition | | --- | --- | | Order | Orders, creditnotes, deliverynotes, ... | | Message | Message contains all digital Transport Types | \n\n#\n\n# Webhook Update Types Skip link to Webhook Update Types | Type | Definition | | --- | --- | | I | A new entity | | U |",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/types",
      "title": "Types",
      "description": "All these different types"
    }
  },
  {
    "markdown": "# Concept Skip link to Concept Your software is able to generate Invoice data and you want to send/receive Peppol Invoices using the Billit application. \n\n#\n\n# Steps for Sending Skip link to Steps for Sending 1. Generate the invoices in your own application 2. Send the invoice to Billit  [Create order 1. Register your Billit Company on Peppol (Billit Application > Integrations > Peppol) 2. When a supplier sends you a Peppol invoice Billit will process it 3. The invoice will now be available and visible in Billit 4. When the Invoice is created/ready in Billit, you can fetch it via the API using the  [Get orders \n\n#\n\n# Step 1 Skip link to Step 1 Get your data ready in your software, prepare the JSON body. \n\n#\n\n# Step 2 Skip link to Step 2 Use the prepared JSON body to send to our Order API  [Create order The invoice will now be visible in your account, under income. \n\n#\n\n# Step 4 Skip link to Step 4 To send the invoice you only have to hit an extra API call. This can be executed at any time **after** you created the invoice. To send an invoice you need the following endpoint  [Send order Success! The invoice is now on its way to the customer. \n\n# Information regarding receiving the invoices Skip link to Information regarding receiving the invoices \n\n#\n\n# Step 1 Skip link to Step 1 Make sure the company is registered on the Peppol Accesspoint from Billit. This will allow the AP to directly show the invoices in the application while also opening them to the API \n\n#\n\n# Step 2-3 Skip link to Step 2-3 Billit automatically processes the invoices into the application and gets it ready for the API or other tools to export. \n\n#\n\n# Step 4 Skip link to Step 4 Via the API you are now able to fetch the invoices with their PDF or any other attachments. This can be done by looking at our GET API  [Get orders Success! Invoice is now in your application   - [Introduction with the Billit API]( - [Idempotent Tokens]( - [OData](",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/use-billit-as-ap-while-also-having-invoices-in-billit",
      "title": "Use Billit as AP while also having invoices in Billit",
      "description": "Own software, with Billit and Peppol what could you need more?"
    }
  },
  {
    "markdown": "# The Party Endpoints Skip link to The Party Endpoints **These endpoints allow you to Create, Get or Patch (Update) parties in a company.*Party Types** - The Party endpoints allow the use of party types, this makes it easy to split and organize different parties. Party Types With our API you can create Customers, Supplier or use them in other Body requests. Just take a look at our different endpoints below. Below we provide you with the most useful values that you might want to fill in. | Field | Value | Definition | | --- | --- | --- | | CommercialName | string | The name of the company | | VATNumber | string | The registered VAT number | | PartyType | String | The type of party [Types]( | | Addresses | Addresses object | The Invoice and or delivery address | | Identifiers | Identifier Object | Other official identifiers [Identifiers]( | JSON ``` lang-json theme-light { \"CommercialName\": \"string\", \"VATNumber\": \"string\", \"PartyType\": \"Customer/Supplier\", \"Addresses\": [ { \"AddressType\": \"string\", \"Tav\": \"string\", \"Name\": \"string\", \"Street\": \"string\", \"StreetNumber\": \"string\", \"Box\": \"string\", \"Zipcode\": \"string\", \"City\": \"string\", \"CountryCode\": \"string\", \"Phone\": \"string\" } ], \"Identifiers\": [ { \"IdentifierType\": \"string\", \"Identifier\": \"string\" } ] } ``` **Identifiers** - When using the Party endpoints you might have to use something different then a normal Vat number. This is why we allow you to store different Identifiers on the Party object. These will be used when having to send an E-Invoice. [Allowed Identifiers]( **Addresses** - There are 2 ways of providing addresses for a Party. 1. Just by adding it in the body provided variables 2. By creating the address array using the Address Types **You will have both options when executing a GET on this endpoint** JSON ``` lang-json theme-light \"Addresses\": [ { \"AddressType\": \"string\", \"Tav\": \"string\", \"Name\": \"string\", \"Street\": \"string\", \"StreetNumber\": \"string\", \"Box\": \"string\", \"Zipcode\": \"string\", \"City\": \"string\", \"CountryCode\": \"string\", \"Phone\": \"string\" } ] ```   - [Party Types]( - [Identifiers]( - [/v1/parties](  No   - [Party Types]( - [Identifiers]( - [/v1/parties](",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference",
      "title": "Party",
      "description": "The Party Endpoints These endpoints allow you to Create, Get or Patch (Update) parties in a company. Party Types The Party endpoints allow the use of party types, this makes it easy to split and organize different parties. Party Types Parties With our API you can create Customers, Supplier or use th..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. EntityType string Defaults to Order EntityUpdateType string Defaults to I WebhookURL string Defaults to WebhookURL \n\n# `` 200 200 json    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 11 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: application/json' 5 --data ' 6{ 7 \"EntityType\": \"Order\", 8 \"EntityUpdateType\": \"I\", 9 \"WebhookURL\": \"WebhookURL\" 10} 11' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 - Result",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/v1webhooks-2",
      "title": "Create Webhook"
    }
  },
  {
    "markdown": "# The Order Endpoints Skip link to The Order Endpoints **These endpoints allow you to Create, Get or Patch (Update) orders.** More and extra info about the order object can be found below. \n\n# Orders Skip link to Orders With our API you can create Invoices, Creditnotes, Offers, .... Just take a look at our different endpoints below. When creating an invoice these are some minimal required fields that you have to provide the API. | Field | Value | Definition | | --- | --- | --- | | OrderType | Types **Using the PartyID** - The PartyID is a unique ID, you can retrieve this ID in multiple ways. More info on how to find PartyID Where can I find my CompanyID or a PartyID | Endpoint | Method | Response | | --- | --- | --- | | /v1/orders | Post | INT (Unique OrderID) | json ``` lang-json theme-light { \"OrderType\": \"Invoice\", \"OrderDirection\": \"Income\", \"OrderNumber\": \"QS-001\", \"OrderDate\": \"2024-01-01\", \"ExpiryDate\": \"2024-01-31\", \"Customer\": { \"Name\": \"Billit\", \"VATNumber\": \"BE0563846944\", \"PartyType\": \"Customer\", \"Identifiers\": [ { \"IdentifierType\": \"GLN\", \"Identifier\": \"5430003732007\" } ], \"Addresses\": [ { \"AddressType\": \"InvoiceAddress\", \"Name\": \"Billit\", \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"City\": \"Ghent\", \"Box\": \"301\", \"CountryCode\": \"BE\" }, { \"AddressType\": \"DeliveryAddress\", //The delivery address, if not provided will be automatically the same as invoice address \"Name\": \"Billit\", \"Street\": \"Oktrooiplein\", \"StreetNumber\": \"1\", \"City\": \"Ghent\", \"Box\": \"301\", \"CountryCode\": \"BE\" } ] }, \"OrderLines\": [ { \"Quantity\": 1, \"UnitPriceExcl\": 10.0, \"Description\": \"Box of cookies\", \"VATPercentage\": 6 }, { \"Quantity\": 2, \"UnitPriceExcl\": 3.75, \"Description\": \"Sticks\", \"VATPercentage\": 21 } ] } ```    No",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/order-1",
      "title": "Order",
      "description": "The Order Endpoints These endpoints allow you to Create, Get or Patch (Update) orders. More and extra info about the order object can be found below. Orders With our API you can create Invoices, Creditnotes, Offers, .... Just take a look at our different endpoints below. When creating an invoice the..."
    }
  },
  {
    "markdown": "Billit provides a JSON structure with a wide range of fields. However, since some networks have different types of fields that we might not support out of the box, we have enabled the use of custom fields in our e-invoice network. You can add these fields for both invoices and creditnote. To avoid mistakes, the root element (Invoice, CreditNote, InvoiceLine,CreditNoteLine) must always be declared. The allowed values can be found in the lists below. \n\n#\n\n# order Skip link to order | Key | Value | | --- | --- | | Invoice.AccountingSupplierParty.Party.Contact.Name | | | Invoice.AccountingSupplierParty.Party.Contact.Telephone | | | Invoice.AccountingSupplierParty.Party.Contact.ElectronicMail | | | Invoice.AccountingCustomerParty.Party.Contact.Name | | | Invoice.AccountingCustomerParty.Party.Contact.Telephone | | | Invoice.AccountingCustomerParty.Party.Contact.ElectronicMail | | | Invoice.Delivery.DeliveryLocation.ID.Text | | | Invoice.Delivery.DeliveryLocation.PostalAddress.StreetName | | | Invoice.Delivery.DeliveryLocation.PostalAddress.AdditionalStreetName | | | Invoice.Delivery.DeliveryLocation.PostalAddress.CityName | | | Invoice.Delivery.DeliveryLocation.PostalAddress.PostalZone | | | Invoice.Delivery.DeliveryLocation.PostalAddress.CountrySubentity | | | Invoice.Delivery.DeliveryLocation.PostalAddress.Country.IdentificationCode.Text | | | Invoice.TaxPointDate | | | Invoice.OrderReference.SalesOrderID.ID.Text | | | Invoice.AccountingCustomerParty.Party.PartyIdentification.ID.Text | | | Invoice.InvoicePeriod.StartDate | | | Invoice.InvoicePeriod.EndDate | | | Invoice.ContractDocumentReference.ID.Text | | | Invoice.AccountingCost (in progress) | | \n\n#\n\n# orderline Skip link to orderline | Key | Value | | --- | --- | | PeppolUnitCode | | | InvoiceLine.InvoicePeriod.StartDate | | | InvoiceLine.InvoicePeriod.EndDate | |",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/how-can-i-add-certain-peppol-values-that-billit-json-does-not-support",
      "title": "How can I add certain Peppol values that Billit JSON does not support",
      "description": "Billit provides a JSON structure with a wide range of fields. However, since some networks have different types of fields that we might not support out of the box, we have enabled the use of custom fields in our e-invoice network. You can add these fields for both invoices and creditnote. To avoid m..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. webhookID string \n\n# `` 200 200 object \n\n# `` 400 400 object    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request DELETE 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 - Result`` 400 - Result",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/delete-webhook",
      "title": "Delete Webhook"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. ProductID int32 Reference string Description string AmountExcl double VAT double Unit string GroupID int32 GroupName string AmountIncl double StockQuantity double MinimumBilledQuantity double BuyExcl double InternalInformation string Created date-time LastModified date-time \n\n# `` 200 Save a product int32    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/product_postproduct-1",
      "title": "Create a new product of update an existing product"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. \n\n# The sendOrder Endpoint Skip link to The sendOrder Endpoint This endpoints allows you to send an E-Invoice over the Peppol network. We use a JSON object similar to our Order object used in the Order | Customer Data [Party]( | The data from the customer | | OrderDate | DateTime | The date from the order | | ExpiryDate | DateTime | The expiry date from the order | | OrderType | [Types]( | The type of invoice | | OrderDirection | [Types]( | The Direction of the invoice | | OrderLines | Orderlines | The items that are billed | | Paid | Boolean | If the invoice is already paid | | PaidDate | DateTime | The date when the order was paid | | Currency | ISO Standard | the currency of the invoice | Below you can find a JSON example of the table above JSONJSON with supplier ``` lang-json theme-light { \"Customer\": { \"Name\": \"A customer name\", \"Street\": \"A street\", \"StreetNumber\": \"25\", \"Box\": \"\", \"Zipcode\": \"9000\", \"City\": \"Gent\", \"CountryCode\": \"BE\", \"IBAN\": \"BE0000001\", \"BIC\": \"KREDBEBB\", \"Mobile\": \"01234242\", \"Email\": \"example@example.be\", \"Contact\": \"Contact\", \"VATNumber\": \"BE0563846944\", \"PartyType\": \"Customer\", \"VATLiable\": true, }, \"OrderNumber\": \"20220001\", \"OrderDate\": \"2019-12-03T18:51:21.261Z\", \"ExpiryDate\": \"2019-12-15T18:51:21.262Z\", \"OrderType\": \"Invoice\", \"OrderDirection\": \"Income\", \"OrderLines\": [ { \"Quantity\": 1, \"UnitPriceExcl\": 100.0, \"Description\": \"my order line\", \"VATPercentage\": 21.0 } ], \"Paid\": true, \"PaidDate\": \"2019-12-03T18:51:21.262Z\", \"Currency\": \"EUR\", } ``` ``` lang-json theme-light //Only possible when you have signed the PeppolAnySender Contract { \"Supplier\":{ \"Name\": \"A customer name\", \"Street\": \"A street\", \"StreetNumber\": \"25\", \"Box\": \"\", \"Zipcode\": \"9000\", \"City\": \"Gent\", \"CountryCode\": \"BE\", \"IBAN\": \"BE0000001\", \"BIC\": \"KREDBEBB\", \"Mobile\": \"01234242\", \"Email\": \"example@example.be\", \"Contact\": \"Contact\", \"VATNumber\": \"BE0563846944\", \"PartyType\": \"Customer\", }, \"Customer\": { \"Name\": \"A customer name\", \"Street\": \"A street\", \"StreetNumber\": \"25\", \"Box\": \"\", \"Zipcode\": \"9000\", \"City\": \"Gent\", \"CountryCode\": \"BE\", \"IBAN\": \"BE0000001\", \"BIC\": \"KREDBEBB\", \"Mobile\": \"01234242\", \"Email\": \"example@example.be\", \"Contact\": \"Contact\", \"VATNumber\": \"BE0563846944\", \"PartyType\": \"Customer\", \"VATLiable\": true, }, \"OrderNumber\": \"20220001\", \"OrderDate\": \"2019-12-03T18:51:21.261Z\", \"ExpiryDate\": \"2019-12-15T18:51:21.262Z\", \"OrderType\": \"Invoice\", \"OrderDirection\": \"Income\", \"OrderLines\": [ { \"Quantity\": 1, \"UnitPriceExcl\": 100.0, \"Description\": \"my order line\", \"VATPercentage\": 21.0 } ], \"Paid\": true, \"PaidDate\": \"2019-12-03T18:51:21.262Z\", \"Currency\": \"EUR\", } ``` OrderID int32 CompanyID int32 OrderPDF object OrderPDF object Attachments array of objects Attachments ADD object OrderNumber string CustomerID int32 SupplierID int32 CounterPartyID int32 Customer object Customer object Supplier object Supplier object CounterParty object CounterParty object OrderDate date-time ExpiryDate date-time OrderType string LastModified date-time Created date-time OrderDirection string OrderLines array of objects OrderLines ADD object BookingEntries array of objects BookingEntries ADD object Journal string OrderTitle string PaymentDiscountPercentage double PaymentDiscountAmount double PaymentDiscountDate date-time VatGroups array of objects VatGroups ADD object VentilationCode string TotalExcl double TotalIncl double TotalVAT double Reference string Tags array of strings Tags ADD string DepartmentID int32 PaymentReference string AboutInvoiceNumber string Paid boolean truefalse PaidDate date-time ExternalProviderID string ExternalProvider string ExternalProviderReferences array of objects ExternalProviderReferences ADD object Comments string Currency string VatDeduction double InternalInfo string IsSent boolean truefalse Invoiced boolean truefalse CustomFields object CustomFields object PeriodFrom date-time PeriodTill date-time AccountCode int32 LastReminder date-time RemindersSent int32 ToPay double OrderStatus string ApprovalStatus string Overdue boolean truefalse DaysOverdue int32 FXRateToForeign double PaymentMethod string DeliveryDate date-time ExportedToConnector boolean truefalse PaymentLinks array of objects PaymentLinks ADD object TemplateID int32 AnalyticCostBearer string AnalyticCostCenter string AccountantVerificationNeeded boolean truefalse CurrentDocumentDeliveryDetails object CurrentDocumentDeliveryDetails object Messages array of objects Messages ADD object AdditionalDocumentReference array of objects AdditionalDocumentReference ADD object PaymentTerms string ContractDocumentReference array of objects ContractDocumentReference ADD object \n\n# `` 200 Send a direct Peppol message. Compatible with receivers that support Invoice5, Creditnote5, BisV3 Invoice or BisV3 Creditnote int32    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/peppol_postsendorder-1",
      "title": "/v1/peppol/sendOrder",
      "description": "The sendOrder Endpoint This endpoints allows you to send an E-Invoice over the Peppol network. We use a JSON object similar to our Order object used in the Order endpoints. This endpoint will create the valid UBL from the JSON provided and will directly send it on the Peppol network. The minimum you..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. fullTextSearch string `` 200    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/financialtransaction_getbanktransactions-1",
      "title": "/v1/financialTransactions"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. \n\n# Post Party Skip link to Post Party This endpoint allows you to create a party in the Billit account. You have to provide the unique ID from Billit. Not the customer number/ID but the ID generated by Billit for this company. [Where can I find my CompanyID or a PartyID]( you can find more information in the Party header section above. [Party]( PartyID int32 BookYearStart date-time Nr string Name string CommercialName string Addresses array of objects Addresses ADD object Street string StreetNumber string Box string Zipcode string City string CountryCode string IBAN string BIC string Mobile string Phone string Fax string Email string Website string Contact string ContactFirstName string ContactLastName string VATNumber string PeppolIdentifier string RPR string LastModified date-time Created date-time PartyType string CustomerSupplier VATLiable boolean truefalse AccountantCode int32 GLAccountCode int64 Language string VentilationCode string ExternalProviderID string ExternalProviderTC string BankAccounts array of objects BankAccounts ADD object DefaultPaymentMethodTC string DefaultPaid boolean truefalse DisplayName string DefaultTransportTypeTC string FinancialReductionPercentageDefault double FinancialReductionDaysDefault int32 DefaultExpiryOffset int32 GLDefaultExpiryOffset int64 Role string InternalInfo string VATDeductable boolean truefalse DefaultReductionPercentage double Identifiers array of objects Identifiers ADD object \n\n# `` 200 Save a party int32   - [Identifiers]( - [Party Types](  No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!   - [Identifiers]( - [Party Types](",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/party_postparty-1",
      "title": "/v1/parties",
      "description": "Post Party This endpoint allows you to create a party in the Billit account. You have to provide the unique ID from Billit. Not the customer number/ID but the ID generated by Billit for this company. Where can I find my CompanyID or a PartyID you can find more information in the Party header section..."
    }
  },
  {
    "markdown": "Adding empty order lines can help create a clearer invoice. These can be either for spacing or to add a description. They can be added as follows. Keep in mind that some e-invoice networks might create a zero line from them with 0 excl and 0 VAT%. ``` lang- theme-light { \"Description\": \"TEST EMPTY LINE\" } ```",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/how-can-i-add-empty-orderlines",
      "title": "How can I add empty Orderlines",
      "description": "Adding empty order lines can help create a clearer invoice. These can be either for spacing or to add a description. They can be added as follows. Keep in mind that some e-invoice networks might create a zero line from them with 0 excl and 0 VAT%. { \"Description\": \"TEST EMPTY LINE\" }"
    }
  },
  {
    "markdown": "Great job! You've reached one of the most crucial pages. You've built your integration and want it to be published on the Billit integration page or go public with it. Just ensure you've completed everything listed below, and you'll be ready to proceed! \n\n# Billit Integration Review Flow Skip link to Billit Integration Review Flow **Is the integration working as expected in the Sandbox?** - ✅ Perfect! Please schedule a demo meeting with one of our API engineers. [How do I request a demo for my integration?]( - 🚩 If the integration is not working as expected, continue refining it. The API Engineer will not approve production access if the integration is not functioning correctly. If you need help or are unsure about using our API, visit [What support can I get as a developer?]( **Next step: Moving the integration to production.** - ✅ Once successful and tested, email us at appreview@billit.be. Upon approval, our marketing or partner team will handle the rest. - 🚩 If the production swap was unsuccessful and you cannot determine the cause, please contact support with as much documentation as possible. That's it! Once you've completed the steps above, you're ready. Great job, and thank you for building your awesome integration.",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/approved-process",
      "title": "Approval process",
      "description": "Yes, I want to be Approved!"
    }
  },
  {
    "markdown": "In the Billit API, you can send your invoices using the commands/send API endpoint. This endpoint allows you to specify a transport type. When using Peppol as the transport type, if the customer is not registered on the Peppol network, the system will attempt to send an email to the customer. This might not be the desired behavior. To address this, you can use the StrictTransportType header. By setting the **StrictTransportType** header to **true**, the system will prevent sending the invoice via email and will instead throw a validation error if the customer is not registered on the Peppol network. This ensures that invoices are only sent through the specified transport type.   - [Header values](",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/how-can-i-restrict-transport-types",
      "title": "How can I restrict transport types",
      "description": "In the Billit API, you can send your invoices using the commands/send API endpoint. This endpoint allows you to specify a transport type. When using Peppol as the transport type, if the customer is not registered on the Peppol network, the system will attempt to send an email to the customer. This m..."
    }
  },
  {
    "markdown": "# Main differences Skip link to Main differences **The URLs** | Isolated test environment | Production environment | | --- | --- | | | | | | | | Create new account here | Create new account here | **Are Sandbox and Production linked to each other?** - No Sandbox is fully isolated from Production meaning it runs separately. So the API key used on Production will not work on Sandbox and vice versa. **What is the difference in license? It looks like I have to buy a license.** - **[SANDBOX]** you are allowed to test and build your integration as long as needed. You will be prompted to pick a license, which you can do since this will not be billed. See more info here on how to start > [How do I get started with the API?]( - **[PRODUCTION]** The moment you start building the integration you receive a 15 day trial. When this is finished you will hit the paywall. **When I send an invoice will they be delivered?** [Network delivery table](",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/sandbox-vs-production",
      "title": "Sandbox VS Production",
      "description": "Is it a big difference?"
    }
  },
  {
    "markdown": "**Below you can find all support Billit provides to developers.** - We have our FAQ on this website. you can find them under \"Guides\". Here you can find some Basic questions on how to get started. [Api Documenation and FAQ]( - A quickstart guide has been put in place to provide you a jumping Start! Navigate to your use case and see how others were able to get starting quickly! If the use case cannot be found below and no information can help you feel free to contact Support! - We have our public website which contains a help article for almost every other thing in Billit. Billit help page - When you cannot find your question in the links provided above, you are free to send us a support ticket. This will get you in touch with a Billit Support member, if the issue cannot be solved by them the question will be passed through to an Engineer who will help you. **You can open a support ticket via the Platform or via support@billit.be*Premium Support** The premium Support plan allows you to have a direct contact within the Billit team. A engineer will be a meeting or chat away to provide you the best integration possible.",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/what-support-can-i-get-as-a-developer",
      "title": "What support can I get as a developer?",
      "description": "We are here to help you!"
    }
  },
  {
    "markdown": "# Verifying signatures Skip link to Verifying signatures The Billit-Signature header included in each webhook event contains a timestamp and a signature. The timestamp is prefixed by t= and the signature by s=. Text ``` lang-text theme-light t=1657133145,s=479f86b8baa181b97281b767b8db125cc312d18b3e611d6157571abcd539f09f ``` \n\n#\n\n# 1. Extract the timestamp and signature from the signature header Skip link to 1. Extract the timestamp and signature from the signature header Get the timestamp and signature value by splitting the string by \",\". Next you can split by \"=\" to get the value of the parameter. \n\n#\n\n# 2. Build the signature payload string Skip link to 2. Build the signature payload string The signature payload is created by concatenating: - The timestamp - The character \".\" - The received payload as a JSON string For example: Text ``` lang-text theme-light 1657133145.{\"OrderID\":12345,\"OrderNumber\":\"2022-123\", ...} ``` \n\n#\n\n# 3. Compare the hash Skip link to 3. Compare the hash SHA-256 hash the signature payload with the signing secret key as key. Verify the generated hash with the signature extracted from the signature header. Optionally, you can check if the difference between the current timestamp and the extracted timestamp is within your tolerance.    No",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/webhook",
      "title": "Webhook",
      "description": "Verifying signatures The Billit-Signature header included in each webhook event contains a timestamp and a signature. The timestamp is prefixed by t= and the signature by s=. t=1657133145,s=479f86b8baa181b97281b767b8db125cc312d18b3e611d6157571abcd539f09f 1. Extract the timestamp and signature from t..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. \n\n# `` 200 OK object View Additional Properties    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/oauth2_posttokenrevoke-1",
      "title": "/OAuth2/revoke"
    }
  },
  {
    "markdown": "It sometimes happens that a customer asks you to add a PO number to your invoice. The PO number should be added on Order (root)level in the property Reference. Adding empty order lines can help create a clearer invoice. These can be either for spacing or to add a description. They can be added as follows. Keep in mind that some e-invoice networks might create a zero line from them with 0 excl and 0 VAT%. ``` lang- theme-light { \"Reference\": \"PO-Number\" --this should be supplied by your customer } ```",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/how-can-i-add-a-po-number",
      "title": "How can I add a PO number to an invoice",
      "description": "It sometimes happens that a customer asks you to add a PO number to your invoice. The PO number should be added on Order (root)level in the property Reference. Adding empty order lines can help create a clearer invoice. These can be either for spacing or to add a description. They can be added as fo..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. fileID string required \n\n# `` 200 Get a file object FileID string FileName string MimeType string FileContent string    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/file_getorders-1",
      "title": "/v1/files/{fileID}"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. \n\n# `` 200 Get A list of all feeds to download. array of objects object Name string    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/accountant_getfeeds-1",
      "title": "/v1/accountant/feeds"
    }
  },
  {
    "markdown": "# Usage Skip link to Usage You are allowed to add the following piece of code in any party Object. Single IdentifierMultiple Identifiers ``` lang-json theme-light \"Identifiers\": [ { \"IdentifierType\": \"SDIPEC\", \"Identifier\": \"Support@Billit.be\" } ] ``` ``` lang-json theme-light \"Identifiers\": [ { \"IdentifierType\": \"SDICODFIS\", \"Identifier\": \"\" }, { \"IdentifierType\": \"SDICODDEST\", \"Identifier\": \"3PRL4IK\" }, { \"IdentifierType\": \"SDIPEC\", \"Identifier\": \"Support@Billit.be\" } ] ``` The Billit API supports multiple identifiers from multiple countries. A list can be found below. | IdentifierType | CountryCode | EInvoiceNetwork | NetworkCode | | --- | --- | --- | --- | | VAT | AD | Peppol | 9922 | | VAT | AE | | | | VAT | AL | Peppol | 9923 | | VAT | AT | Peppol | 9914 | | VAT | BA | Peppol | 9924 | | VAT | BE | Peppol | 9925 | | VAT | BG | Peppol | 9926 | | CNPJ | BR | | | | VAT | CH | Peppol | 9927 | | VAT | CN | | | | VAT | CV | | | | VAT | CY | Peppol | 9928 | | VAT | CZ | Peppol | 9929 | | LEITWEGID | DE | Peppol | 0204 | | VAT | DE | Peppol | 9930 | | VAT | DK | | | | ERST | DK | Peppol | 0198 | | DIGST | DK | Peppol | 0184 | | CVR | DK | Peppol | 9902 | | VAT | EE | Peppol | 9931 | | VAT | EL | Peppol | 9933 | | VAT | ES | Peppol | 9920 | | NIE | ES | | | | DNI | ES | | | | NIF | ES | | | | CIF | ES | | | | VAT | FI | Peppol | 0213 | | OVT | FI | Peppol | 0037 | | ORG | FI | Peppol | 0213 | | NOVT | FI | Peppol | 0216 | | SIRET | FR | Chorus / Peppol | 0009 | | SIRENE | FR | Chorus / Peppol | 0002 | | Service Code | FR | Chorus | | | VAT | FR | Peppol | 9957 | | FRCTC | FR | Peppol | 0225 | | VAT | GB | Peppol | 9932 | | GLN | Global | Peppol | 0088 | | DUNS | Global | Peppol | 0060 | | VAT | Global | | | | VAT | GR | Peppol | 9933 | | VAT | HR | Peppol | 9934 | | OIB | HR | Peppol | 9934 | | VAT | HU | Peppol | 9910 | | VAT | ID | | | | VAT | IE | Peppol | 9935 | | VAT | IL | | | | SDICODDEST | IT | SDI | IT:CODDEST | | SDICODFIS | IT | SDI | 0210 | | SDIPEC | IT | SDI | IT:PEC | | SDIB2G | IT | SDI | IT:CODDEST | | VAT | IT | Peppol | 9906 | | VAT | JP | Peppol | 0221 | | SST | JP | Peppol | 0188 | | VAT | KR | | | | VAT | LI | Peppol | 9936 | | VAT | LT | Peppol | 9937 | | LEC | LT | Peppol | 0200 | | VAT | LU | Peppol | 9938 | | RPM | LU | Peppol | 9938 | | VAT | LV | Peppol | 9939 | | VAT | MA | | | | VAT | MC | Peppol | 9940 | | VAT | ME | Peppol | 9941 | | VAT | MK | Peppol | 9942 | | VAT | MT | Peppol | 9943 | | TIN | MX | SAT | | | EIF | MY | Peppol | 0230 | | KVK | NL | Peppol | 0106 | | OIN | NL | Peppol | 0190 | | VAT | NL | Peppol | 9944 | | VAT | NO | Peppol | 0192 | | ORG | NO | Peppol | 0192 | | VAT | NZ | Peppol | 0088 | | ABN | NZ | Peppol | 0151 | | VAT | PL | Peppol | 9945 | | VAT | PT | Peppol | 9946 | | VAT | RO | Peppol | 9947 | | VAT | RS | Peppol | 9948 | | MBR | RS | | | | VAT | SE | Peppol | 9955 | | ORGNR | SE | Peppol | 0007 | | VAT | SG | Peppol | 0195 | | VAT | SI | Peppol | 9949 | | VAT | SK | Peppol | 9950 | | VAT | SM | Peppol | 9951 | | SDICODDEST | SM | SDI | IT:CODDEST | | SDICODFIS | SM | SDI | 0210 | | SDIPEC | SM | SDI | IT:PEC | | SDIB2G | SM | SDI | IT:CODDEST | | VAT | TR | Peppol | 9952 | | EIN | US | Peppol | 9959 | | VAT | VA | Peppol | |",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/allowed-identifiers",
      "title": "Identifiers",
      "description": "I identify as text!"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. \n\n# `` 200 Get account information object Email string Companies array of objects Companies object PartyID int32 BookYearStart date-time Nr string Name string CommercialName string Addresses array of objects Addresses object AddressType string Tav string Name string Street string StreetNumber string Box string Zipcode string City string CountryCode string Phone string Street string StreetNumber string Box string Zipcode string City string CountryCode string IBAN string BIC string Mobile string Phone string Fax string Email string Website string Contact string ContactFirstName string ContactLastName string VATNumber string PeppolIdentifier string RPR string LastModified date-time Created date-time PartyType string `Customer` `Supplier` VATLiable boolean AccountantCode int32 GLAccountCode int64 Language string VentilationCode string ExternalProviderID string ExternalProviderTC string BankAccounts array of objects BankAccounts object CompanyID int32 BankAccountID int32 IBAN string BIC string Currency string Verified boolean Name string SaldoDate date-time Saldo double ExternalProviderID string LogoFileID string LogoFileUrl string CountryCode string CodaByINGUser boolean BankAccountName string BillBankReceived boolean DefaultPaymentMethodTC string DefaultPaid boolean DisplayName string DefaultTransportTypeTC string FinancialReductionPercentageDefault double FinancialReductionDaysDefault int32 DefaultExpiryOffset int32 GLDefaultExpiryOffset int64 Role string InternalInfo string VATDeductable boolean DefaultReductionPercentage double Identifiers array of objects Identifiers object IdentifierType string Identifier string UserCompanyRoles array of objects UserCompanyRoles object PartyID int32 UserRoleTypes array of strings UserRoleTypes ExternalProviderID string ExternalProviderTC string FirstName string LastName string LoginOrRegisterNeeded boolean    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/account_getaccountinformation-1",
      "title": "/v1/account/accountInformation"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. TypeCodeType string required \n\n# `` 200 Get all translations of a TypeCode object Items array of objects Items object Key string Value string    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/misc_gettypecodes-1",
      "title": "/v1/misc/typecodes/{TypeCodeType}"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. Please find more information here -> [ orderID int32 required \n\n# `` 200 Delete an order int32    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request DELETE 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/order_deleteorder-1",
      "title": "/v1/orders/{orderID}",
      "description": "Please find more information here -&gt; https://docs.billit.be/reference/order-1"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. Keywords string required \n\n# `` 200 Search a company based on any keyword object Items array of objects Items object Source string Either KBO or VIES CompanyIdentification string Street string Number string Name string Zipcode string City string Box string Country string StartDate date-time CommercialName string    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/misc_getcompanysearch-1",
      "title": "/v1/misc/companysearch/{Keywords}"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. \n\n# PATCH Party Skip link to PATCH Party This endpoint allows you to update a party in the Billit account. You have to provide the unique ID from Billit. Not the customer number/ID but the ID generated by Billit for this company. [Where can I find my CompanyID or a PartyID]( Here you can find all properties you can PATCH via this endpoint [Patchable Properties]( partyID int32 required Add Field `` 200 Patch a party    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request PATCH 2 --url 3 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/party_patchparties-1",
      "title": "/v1/parties/{partyID}",
      "description": "PATCH Party This endpoint allows you to update a party in the Billit account. You have to provide the unique ID from Billit. Not the customer number/ID but the ID generated by Billit for this company. Where can I find my CompanyID or a PartyID Here you can find all properties you can PATCH via this ..."
    }
  },
  {
    "markdown": "When setting up an E-Invoice project the statuses are even important then sending the invoice it self. With the webhook on the messages you can a Ping-Pong like setup which allows you to retrieve E-Invoice statuses without having to poll the API. Below we will demonstrate a low level webhook setup that allows you to easily read the invoice statuses without having retrieve the invoice. > \n\n#\n\n# 🚧 This will only work if you store the unique OrderID's when creating an invoice \n\n#\n\n## Step 1 - Create the webhook Create Webhook First you start by creating the webhook. This one will be registered on the Message entity. Create Message webhook ``` lang-json theme-light { \"EntityType\": \"Message\", \"EntityUpdateType\": \"I\", \"WebhookURL\": \"Your webhook url\" } ``` \n\n#\n\n## Step 2 - Setup the backend Skip link to Step 2 - Setup the backend When you have created the Webhook you should have received a Secret. Please store this secret and do not share this with anyone. (Not even with Billit employees!) You can then setup the listener and Signature validator (Optional, but recomended). Verify Signature From this point you can receive webhooks. Every time you send an invoice and the message object is filled with new information you will be notified. This can be a new IMR (Invoice message response from Peppol) or a status file from the SDI network. A response can look like the following. Webhook response ``` lang-json theme-light { \"",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/use-webhooks-to-catch-e-invoice-statuses",
      "title": "Use webhooks to catch E-Invoice statuses",
      "description": "When setting up an E-Invoice project the statuses are even important then sending the invoice it self. With the webhook on the messages you can a Ping-Pong like setup which allows you to retrieve E-Invoice statuses without having to poll the API. Below we will demonstrate a low level webhook setup t..."
    }
  },
  {
    "markdown": "# OData (Open Data Protocol) Skip link to OData (Open Data Protocol) Is an ISO certified standard that is used in rest APIs to define filters. Odata start guide or Odata References > \n\n#\n\n# 📘 Pagination > > Endpoints in the API that support OData such as documents \n\n#\n\n## Apply a filter Skip link to Apply a filter To add filters the \"$filter\" query param must be added. The property on which the filter must be applied is added as plain text followed by +eq+ to signify that the filter must find a record where the property value is equal to the filter value. The filter value can be added between single or double quotes. Eg. filter on the parties DisplayName: /v1/parties$filter=DisplayName+eq+'Billit'. Multiple filters can be applied at once by chaining them with \"+and+\", eg. filtering on OrderType and Direction: `/v1/orders?$filter=OrderType+eq+'Invoice'+and+OrderDirection+eq+'Income'` Filters can be applied to subproperties by appending a /(slash) and the subproprty eg. filter on the subproperty DisplayName of the CounterParty of an order: ` /v1/orders?$filter=CounterParty/DisplayName+eq+'Billit'` \n\n#\n\n## Apply sorting Skip link to Apply sorting Sorting is applied via the \"$orderby\" param and simply adding the property the sorting needs to be applied on, eg. `/v1/orders?$orderby=OrderNumber`. The default sorting is ascending, this can be reversed by adding \"desc\". Sorting on subproperties is also possible and the subproperty is defined in the same way as in a filter, property/subproperty. Multiple properties can be defined to sort on, these are added separated by a comma, eg. order on OrderNumber and then on OrderDate: ` /v1/orders?$orderby=OrderNumber, OrderDate`. \n\n#\n\n## Combine multiple query options Skip link to Combine multiple query options Multiple types of query paramters can be combined by chaining them with the & (ampersand) eg. give a top 5 of the most recent income invoice for the customer Billit: `$filter=CounterParty/DisplayName+eq+'Billit'+and+OrderType+eq+'Invoice'+and+OrderDirection+eq+'Income'` \n\n#\n\n## Limit your results Skip link to Limit your results Limit the amount of items present in the result by using the `$top={amount}`. Note: this can not be used to exceed the default page size of 120 records. \n\n#\n\n## Skip over rows Skip link to Skip over rows A page with result will contain a maximum of 120 records by default. You can retrieve records outside of the page by using the `$skip={amout}` query param. Alternatively you can use the url provided in the NextpageLink in the result, this will always have the correct amount to not fetch any records more than once. \n\n#\n\n# Examples Skip link to Examples Let's see with some examples what OData can do for you. **The following GET request will provide you with all changed invoices from the date provided, in this example: the first of January** HTTP ``` lang-http theme-light GET /v1/orders?$filter=LastModified+ge+DateTime'2022-01-01'+and+OrderType+eq+'Invoice'&$orderby=LastModified+asc ``` You can use this on other GET endpoints too, here is an example on our Party Endpoint. **The following GET request will provide us with all customers that were Last Modified >= 1st of January 2019, sorted** HTTP ``` lang-http theme-light GET /v1/parties?$filter=PartyType+eq+'Customer'+and+LastModified+ge+DateTime'2019-01-01'&$orderby=LastModified+asc ``` **The following GET request will provide us with all products that were Last Modified >= 1st of January 2019, sorted** HTTP ``` lang-http theme-light GET /v1/products?$filter=LastModified+ge+DateTime'2019-01-01'+and+GroupName+eq+'Testgroep'&$orderby=LastModified+asc ``` **The following GET request will provide us with all the orders, with an order date between 2022-01-01 and 2022-12-31** HTTP ``` lang-http theme-light GET /v1/orders?$filter=OrderDate ge datetime'2022-01-01' and OrderDate le datetime'2022-12-31' ``` **The following GET request will provide us with all the orders, Using the ExternalProviderID and only returning those** Use case: Using a POST, you stored the Unique Invoice ID from your software in Billit using the ExternalProviderID. Now you want to check if any invoices exists with that unique ExternalProviderID . You can use the following filter. HTTP ``` lang-http theme-light GET /v1/orders?$filter=ExternalProviderID+eq+'MyCustomNumber' ```",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/odata",
      "title": "OData",
      "description": "OAuth, OData, OBillit"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. feedItemID int32 required The id of the file you want download feedName string required \n\n# `` 200 OK object View Additional Properties    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/accountant_getfile-1",
      "title": "download a coda file from the feed"
    }
  },
  {
    "markdown": "Some of our endpoints support the use of Externalprovider data. This allows you to store unique data from your end into Billit. Which on the other end allows you to use that data in further API calls or checks. Below you can see an example of the usage of this parameter. **Party or Order** | Field | Value | | --- | --- | | ExternalProviderID | Custom value | You can add this field into any customer or order object allowing you to store this in Billit. Check out [this]( to see how to use ExternalproviderID and filter it using OData   - [OData](",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/externalprovider-data",
      "title": "ExternalProvider data",
      "description": "Some of our endpoints support the use of Externalprovider data. This allows you to store unique data from your end into Billit. Which on the other end allows you to use that data in further API calls or checks. Below you can see an example of the usage of this parameter. Party or Order Field Value E..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. uploadID int32 required `` 200 Delete a document to process, based on the upload    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request DELETE 2 --url ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/toprocess_deletetoprocess-1",
      "title": "/v1/toProcess/{uploadID}"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. \n\n# `` 200 OK object View Additional Properties    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/account_getssotoken-1",
      "title": "/v1/account/ssoToken"
    }
  },
  {
    "markdown": "! \n\n#\n\n# Page Not Found",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/parties",
      "title": "404 Not Found"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. inboxItemId int32 required \n\n# `` 200 Send a direct Peppol message. Compatible with receivers that support Invoice5 or Creditnote5, BisV3 Invoice or BisV3 Creditnote int32    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/peppol_inboxitemconfirm-1",
      "title": "/v1/peppol/inbox/{inboxItemId}/confirm"
    }
  },
  {
    "markdown": "At Billit we support the usage of OAuth. We would even go as far as having it as a requirement for certain integrations. [When am I required to use Oauth?]( **Client ID and Secret for the sandbox environment** When wanting to have a ClientID and Secret generated on sandbox you can simply send an email to support@billit.be. Please also provide the name of the integration and the Redirect URL. Keep in mind that the redirect URL has to be a strict match. if you are using multiple URL based on variables let us know in the request so we can allow this to go through. > \n\n#\n\n# 🚧 Never Share! > > Please do not share your ID and Secret to any 3rd party. When Billit sends the data they will remove it from the thread. > > **Billit will never ask you to share the Secret or ID again * * - [When am I required to use Oauth?](",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/how-do-i-request-oauth-client-id-and-secret",
      "title": "How do I request OAuth Client ID and Secret?",
      "description": "Wait another top secret key?"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. \n\n# `` 200 200 object \n\n# `` 400 400 object    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 - Result`` 400 - Result",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/refresh-webhook",
      "title": "Refresh Webhook"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. Please find more information here -> [ orderID int32 required Amount double Description string Date date-time `` 200 Add partial payment to order    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/order_postorderpayment-1",
      "title": "/v1/orders/{orderID}/payments",
      "description": "Please find more information here -&gt; https://docs.billit.be/reference/order-1"
    }
  },
  {
    "markdown": "In Billit the invoice number automatically increases everytime one is created. When using multiple platforms to create invoices knowing the next number in the pipeline can be helpfull. This to make sure the numbers are sequential in each tool and not having any gaps between them. The [/v1/account/sequences]( Endpoint allows you to retrieve the next sequence and even consume it if needed. The sequence types can be found under our [Types]( section. Consuming a sequence can be done by adding the Consume Boolean in the Post request.",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/how-can-i-retrieve-the-next-sequence",
      "title": "How can I retrieve the next sequence",
      "description": "In Billit the invoice number automatically increases everytime one is created. When using multiple platforms to create invoices knowing the next number in the pipeline can be helpfull. This to make sure the numbers are sequential in each tool and not having any gaps between them. The /v1/account/seq..."
    }
  },
  {
    "markdown": "Billit provides two distinct environments tailored for developers. The first environment is linked directly to all production accounting data and e-invoice networks, enabling real-world data processing and communication. The second environment is a replica of the production setup, designed for testing purposes. By utilizing test networks, developers can ensure that their data does not get transmitted to government entities or e-invoice networks inadvertently, offering a secure sandbox for development and experimentation. You can find more info here [Sandbox VS Production]( | Isolated test environment | Production environment | | --- | --- | | | | | | | | Create new account here | Create new account here |",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/sandbox-vs-production-1",
      "title": "Sandbox VS Production",
      "description": "Billit provides two distinct environments tailored for developers. The first environment is linked directly to all production accounting data and e-invoice networks, enabling real-world data processing and communication. The second environment is a replica of the production setup, designed for testi..."
    }
  },
  {
    "markdown": "When creating orders it is possible to add a ventilation code to the invoice. These codes represent certain vat groups/types \n\n# Income Skip link to Income | Code | Description | Default Vat Amount | | --- | --- | --- | | 1 | 0% | 0.00 | | 2 | 6% | 6.00 | | 3 | 12% | 12.00 | | 4 | 21% | 21.00 | | 21 | BTW Verlegd (VAT shifted) | 0.00 | | 22 | Div. Buiten BTW (Misc. Excluding VAT) | 0.00 | | 24 | Marge (Margin) | 0.00 | | 51 | IC Goederen (IC Goods) | 0.00 | | 55 | IC Diensten (IC Services) | 0.00 | | 70 | Import / Export | 0.00 | \n\n# Cost Skip link to Cost | Code | Description | Default Vat Amount | | --- | --- | --- | | 1 | Binnenland (Inland) | NULL | | 21 | BTW Verlegd (VAT shifted) | 0.00 | | 22 | Div. Buiten BTW (Misc. Excluding VAT) | NULL | | 111 | Marge (Margin) | 0.00 | | 51 | IC Goederen (IC Goods) | 0.00 | | 55 | IC Diensten (IC Services) | 0.00 | | 102 | Import Via EU | NULL |",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/ventilation-codes",
      "title": "Ventilation Codes",
      "description": "When creating orders it is possible to add a ventilation code to the invoice. These codes represent certain vat groups/types Income Code Description Default Vat Amount 1 0% 0.00 2 6% 6.00 3 12% 12.00 4 21% 21.00 21 BTW Verlegd (VAT shifted) 0.00 22 Div. Buiten BTW (Misc. Excluding VAT) 0.00 24 Marge..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. Please find more information here -> [ `` 200 All orders have been sent    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/order_getdeleted-1",
      "title": "/v1/orders/deleted",
      "description": "Please find more information here -&gt; https://docs.billit.be/reference/order-1"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. Please find more information here -> [ > \n\n#\n\n# 📘 OData > > This endpoints support OData queries. For more information about this topic, check out the OData documentation on OData - getting started/ OData - Reference or have a look at some examples at [Billit API - OData]( fullTextSearch string \n\n# `` 200 Get a list of invoices/creditnotes/offers/... array of objects object OrderID int32 CompanyID int32 OrderPDF object OrderPDF object Attachments array of objects Attachments object FileID string FileName string MimeType string FileContent string OrderNumber string CustomerID int32 SupplierID int32 CounterPartyID int32 Customer object Customer object Supplier object Supplier object CounterParty object CounterParty object OrderDate date-time ExpiryDate date-time OrderType string LastModified date-time Created date-time OrderDirection string OrderLines array of objects OrderLines object Quantity double UnitPriceExcl double AccountCode int32 Reference string Description string TotalExcl double TotalVAT double VATPercentage double VentilationCode string ProductID int32 Unit string CustomFields object Has additional fields ExternalProviderReferences array of objects ExternalProviderReferences object ExternalProvider string Category string Value string EntityType string EntityID int32 InclLeading boolean UnitPriceIncl double TotalIncl double AnalyticCostBearer string AnalyticCostCenter string ReductionPercentage double DescriptionExtended string BookingEntries array of objects BookingEntries object BookingEntryID int32 OrderID int32 AccountCode int32 Amount double DebetOrCredit string VAT1 int32 VAT2 int32 VAT3 int32 Journal string OrderTitle string PaymentDiscountPercentage double PaymentDiscountAmount double PaymentDiscountDate date-time VatGroups array of objects VatGroups object VentilationCode string VATPercentage double TotalExcl double TotalVAT double TotalIncl double Mtvh double FinancialReductionAmount double VentilationCode string TotalExcl double TotalIncl double TotalVAT double Reference string Tags array of strings Tags DepartmentID int32 PaymentReference string AboutInvoiceNumber string Paid boolean PaidDate date-time ExternalProviderID string ExternalProvider string ExternalProviderReferences array of objects ExternalProviderReferences object ExternalProvider string Category string Value string EntityType string EntityID int32 Comments string Currency string VatDeduction double InternalInfo string IsSent boolean Invoiced boolean CustomFields object Has additional fields PeriodFrom date-time PeriodTill date-time AccountCode int32 LastReminder date-time RemindersSent int32 ToPay double OrderStatus string ApprovalStatus string Overdue boolean DaysOverdue int32 FXRateToForeign double PaymentMethod string DeliveryDate date-time ExportedToConnector boolean PaymentLinks array of objects PaymentLinks object ExternalProvider string ClickUrl string QRImageUrl string TemplateID int32 AnalyticCostBearer string AnalyticCostCenter string AccountantVerificationNeeded boolean CurrentDocumentDeliveryDetails object CurrentDocumentDeliveryDetails object Messages array of objects Messages object Description string FileID string CreationDate date-time TransportType string Success boolean Trials int32 Destination string MessageDirection string AdditionalDocumentReference array of objects AdditionalDocumentReference object DocumentDescription string ID string DocumentType string Attachment object Attachment object PaymentTerms string ContractDocumentReference array of objects ContractDocumentReference object ID string    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/order_getorders-1",
      "title": "/v1/orders",
      "description": "Please find more information here -&gt; https://docs.billit.be/reference/order-1 📘 OData: This endpoints support OData queries. For more information about this topic, check out the OData documentation on OData - getting started / OData - Reference or have a look at some examples at Billit API - ODa..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. ADD object `` 200    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/financialtransaction_postimport-1",
      "title": "/v1/financialTransactions/commands/import"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. \n\n# GET Parties Skip link to GET Parties This endpoint allows you to GET all parties in the Billit account. You do not have to provide an ID, since this will return all of them. > \n\n#\n\n# 📘 OData > > This endpoints support OData queries. For more information about this topic, check out the OData documentation on OData - getting started/ OData - Reference or have a look at some examples at [Billit API - OData]( fullTextSearch string \n\n# `` 200 Get a list of customers or suppliers array of objects object PartyID int32 BookYearStart date-time Nr string Name string CommercialName string Addresses array of objects Addresses object AddressType string Tav string Name string Street string StreetNumber string Box string Zipcode string City string CountryCode string Phone string Street string StreetNumber string Box string Zipcode string City string CountryCode string IBAN string BIC string Mobile string Phone string Fax string Email string Website string Contact string ContactFirstName string ContactLastName string VATNumber string PeppolIdentifier string RPR string LastModified date-time Created date-time PartyType string `Customer` `Supplier` VATLiable boolean AccountantCode int32 GLAccountCode int64 Language string VentilationCode string ExternalProviderID string ExternalProviderTC string BankAccounts array of objects BankAccounts object CompanyID int32 BankAccountID int32 IBAN string BIC string Currency string Verified boolean Name string SaldoDate date-time Saldo double ExternalProviderID string LogoFileID string LogoFileUrl string CountryCode string CodaByINGUser boolean BankAccountName string BillBankReceived boolean DefaultPaymentMethodTC string DefaultPaid boolean DisplayName string DefaultTransportTypeTC string FinancialReductionPercentageDefault double FinancialReductionDaysDefault int32 DefaultExpiryOffset int32 GLDefaultExpiryOffset int64 Role string InternalInfo string VATDeductable boolean DefaultReductionPercentage double Identifiers array of objects Identifiers object IdentifierType string Identifier string    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/party_getparties-1",
      "title": "/v1/parties",
      "description": "GET Parties This endpoint allows you to GET all parties in the Billit account. You do not have to provide an ID, since this will return all of them. 📘 OData: This endpoints support OData queries. For more information about this topic, check out the OData documentation on OData - getting started / O..."
    }
  },
  {
    "markdown": "The Billit API Allows you to use Webhooks. This so your integration can listen automatically to any updates and trigger reactions. Billit usess webhooks to notify your application when an event happens in your account. These are useful to able to catch async events such as an invoice that has been paid, updated or created. \n\n#\n\n# How to use the Billit Webhooks Skip link to How to use the Billit Webhooks The Billit webhooks push HTTPS calls to the registered URL provided. We will send a JSON payload to your integration. This data can be used to execute actions in you backend systems. \n\n#\n\n## Steps to receive a webhook Skip link to Steps to receive a webhook 1. Create the webhook Webhook We sign all webhooks we send out with a signature. This Signature can be decrypted by using the Secret we provided you when creating the webhook. \n\n#\n\n## Verifying signatures Skip link to Verifying signatures The Billit-Signature header included in each webhook event contains a timestamp and a signature. The timestamp is prefixed by t= and the signature by s=. Text ``` lang-text theme-light t=1657133145,s=479f86b8baa181b97281b767b8db125cc312d18b3e611d6157571abcd539f09f ``` \n\n#\n\n## 1. Extract the timestamp and signature from the signature header Skip link to 1. Extract the timestamp and signature from the signature header Get the timestamp and signature value by splitting the string by \",\". Next you can split by \"=\" to get the value of the parameter. \n\n#\n\n## 2. Build the signature payload string Skip link to 2. Build the signature payload string The signature payload is created by concatenating: - The timestamp - The character \".\" - The received payload as a JSON string For example: Text ``` lang-text theme-light 1657133145.{\"OrderID\":12345,\"EntityType\":\"Order\", ...} ``` \n\n#\n\n## 3. Compare the hash Skip link to 3. Compare the hash SHA-256 hash the signature payload with the signing secret key as key. Verify the generated hash with the signature extracted from the signature header. Optionally, you can check if the difference between the current timestamp and the extracted timestamp is within your tolerance.    No",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/v1webhooks",
      "title": "Webhook",
      "description": "The Billit API Allows you to use Webhooks. This so your integration can listen automatically to any updates and trigger reactions. Billit usess webhooks to notify your application when an event happens in your account. These are useful to able to catch async events such as an invoice that has been p..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. \n\n# Get Party Skip link to Get Party This endpoint allows you to retrieve a party from the Billit account. You have to provide the unique ID from Billit. Not the customer number/ID but the ID generated by Billit for this company. [Where can I find my CompanyID or a PartyID]( When you execute the following request you will retrieve a JSON with all data for that Party partyID int32 required \n\n# `` 200 Get a party object PartyID int32 BookYearStart date-time Nr string Name string CommercialName string Addresses array of objects Addresses object AddressType string Tav string Name string Street string StreetNumber string Box string Zipcode string City string CountryCode string Phone string Street string StreetNumber string Box string Zipcode string City string CountryCode string IBAN string BIC string Mobile string Phone string Fax string Email string Website string Contact string ContactFirstName string ContactLastName string VATNumber string PeppolIdentifier string RPR string LastModified date-time Created date-time PartyType string `Customer` `Supplier` VATLiable boolean AccountantCode int32 GLAccountCode int64 Language string VentilationCode string ExternalProviderID string ExternalProviderTC string BankAccounts array of objects BankAccounts object CompanyID int32 BankAccountID int32 IBAN string BIC string Currency string Verified boolean Name string SaldoDate date-time Saldo double ExternalProviderID string LogoFileID string LogoFileUrl string CountryCode string CodaByINGUser boolean BankAccountName string BillBankReceived boolean DefaultPaymentMethodTC string DefaultPaid boolean DisplayName string DefaultTransportTypeTC string FinancialReductionPercentageDefault double FinancialReductionDaysDefault int32 DefaultExpiryOffset int32 GLDefaultExpiryOffset int64 Role string InternalInfo string VATDeductable boolean DefaultReductionPercentage double Identifiers array of objects Identifiers object IdentifierType string Identifier string    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/party_getparty-1",
      "title": "/v1/parties/{partyID}",
      "description": "Get Party This endpoint allows you to retrieve a party from the Billit account. You have to provide the unique ID from Billit. Not the customer number/ID but the ID generated by Billit for this company. Where can I find my CompanyID or a PartyID When you execute the following request you will retrie..."
    }
  },
  {
    "markdown": "# Concept Skip link to Concept When using the API you can also retrieve the File Billit sends to the network. Step 1: Create the Invoice ( Order ( [Order]( - You use the Unique ID to trigger the command send Step 3: From this point you can retrieve the Invoice ( [Order]( - You use the Unique ID to retrieve the Invoice - This Invoice has Messages attached - Filter: - The Outgoing one - Type Peppol Step 4: From the message you just retrieved you can now grab the FileID attached. Step 5: File Endpoint. When you retrieve on this endpoint you can grab the original file ( [/v1/files/{fileID}](",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/retrieve-the-original-file-sent-to-the-choosen-network",
      "title": "Retrieve the original file sent to the choosen network",
      "description": "Concept When using the API you can also retrieve the File Billit sends to the network. Step 1: Create the Invoice ( Order ) This returns the Unique ID Step 2: Send the invoice (Command Send) ( Order ) You use the Unique ID to trigger the command send Step 3: From this point you can retrieve the Invo..."
    }
  },
  {
    "markdown": "In the Billit platform there are multiple ways invoices from suppliers can reach the software thus exportable through API. Exporting Purchase invoices can be helpfull for multiple reasons. Exporting these to other software for further tax reporting or just offline storage. Luckly this is the same Order object that you have been using for creating the first sales invoices. This object will contain all information that can find on these pages: - Sales Invoices - Order Information",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/adding-your-first-purchase-invoice",
      "title": "Adding your first purchase invoice",
      "description": "In the Billit platform there are multiple ways invoices from suppliers can reach the software thus exportable through API. Exporting Purchase invoices can be helpfull for multiple reasons. Exporting these to other software for further tax reporting or just offline storage. Luckly this is the same Or..."
    }
  },
  {
    "markdown": "**When I send an invoice will they be delivered?** It depends on the transport type chosen. There are different networks which we use on our 2 environments 1. Production network = They will be delivered as an official invoice 2. Test network = They will be delivered to the test network of the chosen network type. (If receiver is registered) | Transport Type | Sandbox | Production | | --- | --- | --- | | Peppol | Test network | Production network | | SDI | Test network | Production network | | Chorus | Test network | Production network | | KSeF | Test network | Production network | | OSA | Test network | Production network | | Email | Production network | Production network | | Letter | Disabled on Test | Production network |",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/network-environments",
      "title": "Network environments",
      "description": "When I send an invoice will they be delivered? It depends on the transport type chosen. There are different networks which we use on our 2 environments Production network = They will be delivered as an official invoice Test network = They will be delivered to the test network of the chosen network t..."
    }
  },
  {
    "markdown": "Following the creation of your first invoice, the next step is to dispatch it to the recipient. Understanding that invoice delivery methods can vary significantly from one country to another and even among different customers, we've simplified the process to ensure ease and flexibility. You can explore the various transportTypes available for sending invoices by visiting our documentation page Transport Types. It's important to note that not all features may be available on the test network within the sandbox environment. Therefore, we recommend regularly checking our network environments documentation for the most recent updates and changes. This proactive approach helps ensure that you're always aligned with the latest capabilities and requirements for invoice delivery. Sending the invoices can be done by 2 options: 1. Enable auto sending invoices 1. This can be found in the company settings page. Everyday at 9 am all invoices will be sent. 2. Provide the Instant Send Header 1. Providing \"InstantSend\" header with the value \"true\". This will automatically trigger the Command Send API. Keep in mind that if you use this and the validation for sending fails the invoice will not be created. 3. Use the command Send API endpoint 1. Use the postman request setup for sending or the description below 2. TransportTypes can be found here -> Transport Types > \n\n#\n\n# 📘 Testable request in Postman: 05 - Send Sales Invoice | Endpoint | Method | Response | | --- | --- | --- | | /v1/orders/commands/send | POST | OK | JSON ``` lang-json theme-light { \"Transporttype\" : \"Peppol\", \"OrderIDs\" : {UniqueID, UniqueID, ....} } ``` \n\n#\n\n# Validations Skip link to Validations It is possible that you will receive validations when trying to send. These can be that the receiver is not on the Peppol network or something is not inline with network rules. You will have to adjust the invoice before sending again.",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/sending-your-first-invoice",
      "title": "Sending your first invoice",
      "description": "Following the creation of your first invoice, the next step is to dispatch it to the recipient. Understanding that invoice delivery methods can vary significantly from one country to another and even among different customers, we've simplified the process to ensure ease and flexibility. You can expl..."
    }
  },
  {
    "markdown": "At Billit we do not want the end user to experience 500 Errors, This means we did not handle the exception or validation correct. Please contact support with the API call that caused this error. Also try and describe what the use case of the call is. > \n\n#\n\n# 🚧 Never Share > > Please do not send us your API key or credentials in the support ticket! Billit support will never ask for secret keys!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/500",
      "title": "500",
      "description": "At Billit we do not want the end user to experience 500 Errors, This means we did not handle the exception or validation correct. Please contact support with the API call that caused this error. Also try and describe what the use case of the call is. 🚧 Never Share: Please do not send us your API ke..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. Please find more information here -> [ orderID int32 required documentType string \n\n# `` 200 Get an order object OrderID int32 CompanyID int32 OrderPDF object FileID string FileName string MimeType string FileContent string Attachments array of objects Attachments object FileID string FileName string MimeType string FileContent string OrderNumber string CustomerID int32 SupplierID int32 CounterPartyID int32 Customer object PartyID int32 BookYearStart date-time Nr string Name string CommercialName string Addresses array of objects Addresses object AddressType string Tav string Name string Street string StreetNumber string Box string Zipcode string City string CountryCode string Phone string Street string StreetNumber string Box string Zipcode string City string CountryCode string IBAN string BIC string Mobile string Phone string Fax string Email string Website string Contact string ContactFirstName string ContactLastName string VATNumber string PeppolIdentifier string RPR string LastModified date-time Created date-time PartyType string `Customer` `Supplier` VATLiable boolean AccountantCode int32 GLAccountCode int64 Language string VentilationCode string ExternalProviderID string ExternalProviderTC string BankAccounts array of objects BankAccounts object CompanyID int32 BankAccountID int32 IBAN string BIC string Currency string Verified boolean Name string SaldoDate date-time Saldo double ExternalProviderID string LogoFileID string LogoFileUrl string CountryCode string CodaByINGUser boolean BankAccountName string BillBankReceived boolean DefaultPaymentMethodTC string DefaultPaid boolean DisplayName string DefaultTransportTypeTC string FinancialReductionPercentageDefault double FinancialReductionDaysDefault int32 DefaultExpiryOffset int32 GLDefaultExpiryOffset int64 Role string InternalInfo string VATDeductable boolean DefaultReductionPercentage double Identifiers array of objects Identifiers object IdentifierType string Identifier string Supplier object PartyID int32 BookYearStart date-time Nr string Name string CommercialName string Addresses array of objects Addresses object AddressType string Tav string Name string Street string StreetNumber string Box string Zipcode string City string CountryCode string Phone string Street string StreetNumber string Box string Zipcode string City string CountryCode string IBAN string BIC string Mobile string Phone string Fax string Email string Website string Contact string ContactFirstName string ContactLastName string VATNumber string PeppolIdentifier string RPR string LastModified date-time Created date-time PartyType string `Customer` `Supplier` VATLiable boolean AccountantCode int32 GLAccountCode int64 Language string VentilationCode string ExternalProviderID string ExternalProviderTC string BankAccounts array of objects BankAccounts object CompanyID int32 BankAccountID int32 IBAN string BIC string Currency string Verified boolean Name string SaldoDate date-time Saldo double ExternalProviderID string LogoFileID string LogoFileUrl string CountryCode string CodaByINGUser boolean BankAccountName string BillBankReceived boolean DefaultPaymentMethodTC string DefaultPaid boolean DisplayName string DefaultTransportTypeTC string FinancialReductionPercentageDefault double FinancialReductionDaysDefault int32 DefaultExpiryOffset int32 GLDefaultExpiryOffset int64 Role string InternalInfo string VATDeductable boolean DefaultReductionPercentage double Identifiers array of objects Identifiers object IdentifierType string Identifier string CounterParty object PartyID int32 BookYearStart date-time Nr string Name string CommercialName string Addresses array of objects Addresses object AddressType string Tav string Name string Street string StreetNumber string Box string Zipcode string City string CountryCode string Phone string Street string StreetNumber string Box string Zipcode string City string CountryCode string IBAN string BIC string Mobile string Phone string Fax string Email string Website string Contact string ContactFirstName string ContactLastName string VATNumber string PeppolIdentifier string RPR string LastModified date-time Created date-time PartyType string `Customer` `Supplier` VATLiable boolean AccountantCode int32 GLAccountCode int64 Language string VentilationCode string ExternalProviderID string ExternalProviderTC string BankAccounts array of objects BankAccounts object CompanyID int32 BankAccountID int32 IBAN string BIC string Currency string Verified boolean Name string SaldoDate date-time Saldo double ExternalProviderID string LogoFileID string LogoFileUrl string CountryCode string CodaByINGUser boolean BankAccountName string BillBankReceived boolean DefaultPaymentMethodTC string DefaultPaid boolean DisplayName string DefaultTransportTypeTC string FinancialReductionPercentageDefault double FinancialReductionDaysDefault int32 DefaultExpiryOffset int32 GLDefaultExpiryOffset int64 Role string InternalInfo string VATDeductable boolean DefaultReductionPercentage double Identifiers array of objects Identifiers object IdentifierType string Identifier string OrderDate date-time ExpiryDate date-time OrderType string LastModified date-time Created date-time OrderDirection string OrderLines array of objects OrderLines object Quantity double UnitPriceExcl double AccountCode int32 Reference string Description string TotalExcl double TotalVAT double VATPercentage double VentilationCode string ProductID int32 Unit string CustomFields object Has additional fields ExternalProviderReferences array of objects ExternalProviderReferences object ExternalProvider string Category string Value string EntityType string EntityID int32 InclLeading boolean UnitPriceIncl double TotalIncl double AnalyticCostBearer string AnalyticCostCenter string ReductionPercentage double DescriptionExtended string BookingEntries array of objects BookingEntries object BookingEntryID int32 OrderID int32 AccountCode int32 Amount double DebetOrCredit string VAT1 int32 VAT2 int32 VAT3 int32 Journal string OrderTitle string PaymentDiscountPercentage double PaymentDiscountAmount double PaymentDiscountDate date-time VatGroups array of objects VatGroups object VentilationCode string VATPercentage double TotalExcl double TotalVAT double TotalIncl double Mtvh double FinancialReductionAmount double VentilationCode string TotalExcl double TotalIncl double TotalVAT double Reference string Tags array of strings Tags DepartmentID int32 PaymentReference string AboutInvoiceNumber string Paid boolean PaidDate date-time ExternalProviderID string ExternalProvider string ExternalProviderReferences array of objects ExternalProviderReferences object ExternalProvider string Category string Value string EntityType string EntityID int32 Comments string Currency string VatDeduction double InternalInfo string IsSent boolean Invoiced boolean CustomFields object Has additional fields PeriodFrom date-time PeriodTill date-time AccountCode int32 LastReminder date-time RemindersSent int32 ToPay double OrderStatus string ApprovalStatus string Overdue boolean DaysOverdue int32 FXRateToForeign double PaymentMethod string DeliveryDate date-time ExportedToConnector boolean PaymentLinks array of objects PaymentLinks object ExternalProvider string ClickUrl string QRImageUrl string TemplateID int32 AnalyticCostBearer string AnalyticCostCenter string AccountantVerificationNeeded boolean CurrentDocumentDeliveryDetails object DocumentRefusedDate date-time DocumentDeliveryDate date-time DocumentDeliveryInfo string DocumentRefusedReasonTC string DocumentRefusedInfo string IsDocumentDelivered boolean Messages array of objects Messages object Description string FileID string CreationDate date-time TransportType string Success boolean Trials int32 Destination string MessageDirection string AdditionalDocumentReference array of objects AdditionalDocumentReference object DocumentDescription string ID string DocumentType string Attachment object Attachment object PaymentTerms string ContractDocumentReference array of objects ContractDocumentReference object ID string    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request GET 2 --url 3 --header 'accept: application/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/order_getorders_orderid",
      "title": "/v1/orders/{orderID}",
      "description": "Please find more information here -&gt; https://docs.billit.be/reference/order-1"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. FileID string FileName string MimeType string FileContent string `` 200 Upload a coda file    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/financialtransaction_postimportfile-1",
      "title": "/v1/financialTransactions/importFile"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. Code int32 Description string GLAccountType string \n\n# `` 200 Save an general ledger account code int32    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/glaccount_postglaccount-1",
      "title": "/v1/glaccounts"
    }
  },
  {
    "markdown": "# The account endpoints Skip link to The account endpoints **Basic usage of this endpoint** This endpoint is directed to your own Company/Party, or to create a new Company/party via the API.    No",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/account-1",
      "title": "Account",
      "description": "The account endpoints Basic usage of this endpoint This endpoint is directed to your own Company/Party, or to create a new Company/party via the API."
    }
  },
  {
    "markdown": "When the following 401 error is thrown you do not have access to perform that command. This error can be generated from multiple endpoins. Below you can see some examples. **Wrong OrderID** So you are trying to retrieve an order. But the API key or OAuth credentials used do not have access to retrieve that invoice. **Wrong Party ID** When creating an order you might use the wrong Customer ID in the Object this could also throw the error since the account does not have permission to use that ID.",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/401",
      "title": "401 - Unauthorized",
      "description": "When the following 401 error is thrown you do not have access to perform that command. This error can be generated from multiple endpoins. Below you can see some examples. Wrong OrderID So you are trying to retrieve an order. But the API key or OAuth credentials used do not have access to retrieve t..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. Please find more information here -> [Quick start]( OrderID int32 CompanyID int32 OrderPDF object OrderPDF object Attachments array of objects Attachments ADD object OrderNumber string CustomerID int32 SupplierID int32 CounterPartyID int32 Customer object Customer object Supplier object Supplier object CounterParty object CounterParty object OrderDate date-time ExpiryDate date-time OrderType string LastModified date-time Created date-time OrderDirection string OrderLines array of objects OrderLines ADD object BookingEntries array of objects BookingEntries ADD object Journal string OrderTitle string PaymentDiscountPercentage double PaymentDiscountAmount double PaymentDiscountDate date-time VatGroups array of objects VatGroups ADD object VentilationCode string TotalExcl double TotalIncl double TotalVAT double Reference string Tags array of strings Tags ADD string DepartmentID int32 PaymentReference string AboutInvoiceNumber string Paid boolean truefalse PaidDate date-time ExternalProviderID string ExternalProvider string ExternalProviderReferences array of objects ExternalProviderReferences ADD object Comments string Currency string VatDeduction double InternalInfo string IsSent boolean truefalse Invoiced boolean truefalse CustomFields object CustomFields object PeriodFrom date-time PeriodTill date-time AccountCode int32 LastReminder date-time RemindersSent int32 ToPay double OrderStatus string ApprovalStatus string Overdue boolean truefalse DaysOverdue int32 FXRateToForeign double PaymentMethod string DeliveryDate date-time ExportedToConnector boolean truefalse PaymentLinks array of objects PaymentLinks ADD object TemplateID int32 AnalyticCostBearer string AnalyticCostCenter string AccountantVerificationNeeded boolean truefalse CurrentDocumentDeliveryDetails object CurrentDocumentDeliveryDetails object Messages array of objects Messages ADD object AdditionalDocumentReference array of objects AdditionalDocumentReference ADD object PaymentTerms string ContractDocumentReference array of objects ContractDocumentReference ADD object \n\n# `` 200 Save an order int32    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/order_postorders-1",
      "title": "/v1/orders",
      "description": "Please find more information here -&gt; Quick start"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. SequenceType string Consume boolean truefalse \n\n# `` 200 OK object View Additional Properties    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'accept: application/json' 4 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here! Or choose an example: application/json `` 200 text/json `` 200",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/account_postsequences-1",
      "title": "/v1/account/sequences"
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. feedName string required `` 200 The Feed has been deleted    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request DELETE 2 --url ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/accountant_deletefeeds-1",
      "title": "Delete the feed"
    }
  },
  {
    "markdown": "OAuth is mandatory when the integrator is opening its integration to the public, meaning people outside of the organization of the integrator are going to use it. The reason we require this, is because it is more secure than the API key. This also allows the User of the integration to give permission for the connection since they have to log in. Even allowing them to break the connection whenever they want. Introduction to OAuth If for some reason the integrator is not able to build OAuth please contact Support, we might be able to help.   - [How do I request Oauth Client ID and Secret?](",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/when-am-i-required-to-use-oauth",
      "title": "When am I required to use OAuth?",
      "description": "Am I tho?"
    }
  },
  {
    "markdown": "Nice, you want to demo what you built. Before we can go to the demo phase, please check these requirements before planning the meeting. ❓ Is it working as expected on Sandbox? ❓ Are you able to demo a working flow? ❓ If the integration is for public use, did you implement OAuth? **If all these requirements are checked off please send us an email ( appreview@billit.be) * *",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/how-do-i-request-a-demo-for-my-integration",
      "title": "How do I request a demo for my integration?",
      "description": "Ooh demos? Nice!"
    }
  },
  {
    "markdown": "When sending e-invoice you might come across the possibility that you have to send an invoice towards an entity which has multiple entities with the same VAT number. To make sure the invoices are delivered to the correct receiver you have a few options. Using: VAT - CBE JSON ``` lang-json theme-light \"Customer\": { \"Name\": \"Politie Antwerpen\", \"VATNumber\": \" BE0207500123\", \"PartyType\": \"Customer\", \"Identifiers\": [ { \"IdentifierType\": \"CBE\", \"Identifier\": \"0862884185\" } ], \"Addresses\": [ { \"AddressType\": \"InvoiceAddress\", \"Name\": \"Politie\", \"Street\": \"XXXXX\", \"StreetNumber\": \"XXXX\", \"City\": \"XXXX\", \"Box\": \"XXXX\", \"CountryCode\": \"XXXX” } ] } ``` Using: VAT - GLN or other identifier JSON ``` lang-json theme-light \"Customer\": { \"Name\": \"Billit\", \"VATNumber\": \" BE0563846944\", \"PartyType\": \"Customer\", \"Identifiers\": [ { \"IdentifierType\": \"GLN\", \"Identifier\": \"5430003732007\" } ], \"Addresses\": [ { \"AddressType\": \"InvoiceAddress\", \"Name\": \"Billit\", \"Street\": \"XXXXX\", \"StreetNumber\": \"XXXX\", \"City\": \"XXXX\", \"Box\": \"XXXX\", \"CountryCode\": \"XXXX” } ] } ```",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/how-can-i-send-an-invoice-with-vat-different-to-cbe",
      "title": "How can I send an invoice with VAT different to CBE",
      "description": "When sending e-invoice you might come across the possibility that you have to send an invoice towards an entity which has multiple entities with the same VAT number. To make sure the invoices are delivered to the correct receiver you have a few options. Using: VAT - CBE \"Customer\": { \"Name\": \"Politi..."
    }
  },
  {
    "markdown": "We stand by making our API backwards compatible, meaning building your integration a certain way will keep working even if Billit changes things in the API or adds new improvements. You might see double fields that are mapped to with the same data but this will not interfere with your integration. If anything does change, which we have not done in the last years. We will make an announcement under the changelog.",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/versioning",
      "title": "Versioning",
      "description": "We stand by making our API backwards compatible, meaning building your integration a certain way will keep working even if Billit changes things in the API or adds new improvements. You might see double fields that are mapped to with the same data but this will not interfere with your integration. I..."
    }
  },
  {
    "markdown": "| time | status | user agent | | | :-- | :-- | :-- | :-- | | Make a request to see history. | \n\n#\n\n### URL Expired The URL for this request expired after 30 days. \n\n# Sending Orders Skip link to Sending Orders With the command send API you are able to send invoices to over transport Types. [Types]( PeppolSDI ``` lang-json theme-light { \"Transporttype\" : \"Peppol\", \"OrderIDs\" : List<int> orderIDs } ``` ``` lang-json theme-light { \"Transporttype\" : \"SDI\", \"OrderIDs\" : List<int> orderIDs } ``` OrderIds array of int32s OrderIds ADD int32 TransportType string PrintType string `` 200 All orders have been sent    No ShellNodeRubyPHPPython ``` xxxxxxxxxx 1curl --request POST 2 --url 3 --header 'content-type: text/json' ``` Click `Try It!` to start a request and see the response here!",
    "metadata": {
      "sourceURL": "https://docs.billit.be/reference/order_postsend-1",
      "title": "/v1/orders/commands/send",
      "description": "Sending Orders With the command send API you are able to send invoices to over transport Types. Types { \"Transporttype\" : \"Peppol\", \"OrderIDs\" : List&lt;int&gt; orderIDs } { \"Transporttype\" : \"SDI\", \"OrderIDs\" : List&lt;int&gt; orderIDs }"
    }
  },
  {
    "markdown": "Some endpoints allow patching. Below you can find which of the endpoints allow it and which property is allowed to be patched. \n\n# Order Endpoint Skip link to Order Endpoint | Property Name | Property Type | | --- | --- | | Paid | Boolean | | PaidDate | DateTime | | IsSent | Boolean | | ApprovalStatus | Types | | AccountCode | String | | InternalInfo | String | | Invoiced | Boolean | | AccountantVerificationNeeded | Boolean | \n\n# Party Endpoint Skip link to Party Endpoint | Property Name | Property Type | | --- | --- | | GLAccountCode | String | | GLDefaultExpiryOffset | String | | Nr | String | | Email | String | | ExternalProviderTC | String | | ExternalProviderID | String | | Name | String | | CommercialName | String | | ContactFirstName | String | | ContactLastName | String | | CountryCode | String (ISO CODE) | | City | String | | Street | String | | StreetNumber | String | | Zipcode | String | | Box | String | | Phone | String | | Mobile | String | | Fax | String | | VATNumber | String | | IBAN | String | | Language | String | | VATLiable | Boolean |",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/patchable-properties",
      "title": "Patchable Properties",
      "description": "Are these like updates?"
    }
  },
  {
    "markdown": "Each company, customer, supplier in Billit has its own ID. This ID is separate from a custom ID you give. This ID allows you to use them in request without having to provide all the data in the request. **There are a few ways on how to get these IDs** - By creating a Party via de API [/v1/parties]( When you create a party via this endpoint a unique ID will be returned. - By retrieving a Party via de API [/v1/parties/{partyID}]( - By going to the page of the Party 1. If you need your own company ID you can find it by going to the my company page in Billit and copying the Unique ID from the URL 2. If you need the Unique ID from a customer or supplier you can go to the edit screen for that party and get the ID from the URL. Note: when no party is specified in the request headers, the Billit API will use the oldest existing company that can be linked to the user's API key. Provide the partyid header and a companyid to select which company needs to be used.",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/where-can-i-find-my-companyid-or-a-partyid",
      "title": "Where can I find my CompanyID or a PartyID",
      "description": "All these IDs and why are they so unique?"
    }
  },
  {
    "markdown": "There's a few endpoints in the Billit API that return files, such as Order; File.WriteAllBytes(@\"c:pdfFromBillit.pdf\", PDFDecoded); ```",
    "metadata": {
      "sourceURL": "https://docs.billit.be/docs/how-can-i-save-a-file",
      "title": "How can I read/save a file",
      "description": "Psst, it's based on the number 64"
    }
  }
]